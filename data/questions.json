[
    {
        "question_text": "Ma'lumotlar turlariga qaysi biri kirmaydi?",
        "options": [
            {
                "option_text": "Butun sonlar",
                "is_correct": false
            },
            {
                "option_text": "Haqiqiy sonlar",
                "is_correct": false
            },
            {
                "option_text": "Kompleks sonlar",
                "is_correct": false
            },
            {
                "option_text": "Matritsalar",
                "is_correct": true
            }
        ]
    },
    {
        "question_text": "Algoritmning asosiy turlari qaysilar?",
        "options": [
            {
                "option_text": "chiziqli, tarmoqlanuvchi, takrorlanuvchi",
                "is_correct": true
            },
            {
                "option_text": "Statik, dinamik",
                "is_correct": false
            },
            {
                "option_text": "Raqamli, analog",
                "is_correct": false
            },
            {
                "option_text": "Blokli, masshtabli",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Rekursiv algoritm bu –",
        "options": [
            {
                "option_text": "Bir martalik bajariladigan algoritm",
                "is_correct": false
            },
            {
                "option_text": "O'zini qayta chaqiradigan algoritm",
                "is_correct": true
            },
            {
                "option_text": "Parallel bajariladigan algoritm",
                "is_correct": false
            },
            {
                "option_text": "Cheksiz siklda ishlaydigan algoritm",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Ma'lumotlar tuzilmasiga qaysi biri misol bo'la oladi?",
        "options": [
            {
                "option_text": "Integer",
                "is_correct": false
            },
            {
                "option_text": "String",
                "is_correct": false
            },
            {
                "option_text": "Stack",
                "is_correct": true
            },
            {
                "option_text": "Boolean",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Algoritmning asosiysi bo'lgan qismlar qaysilar?",
        "options": [
            {
                "option_text": "Boshlanish, tugatish",
                "is_correct": false
            },
            {
                "option_text": "Boshlanish, o'zgartirish, natija",
                "is_correct": false
            },
            {
                "option_text": "Yuborish, qabul qilish",
                "is_correct": false
            },
            {
                "option_text": "Boshlash, bajarish, natija",
                "is_correct": true
            }
        ]
    },
    {
        "question_text": "Qaysi ma'lumotlar tuzilmasi LIFO tamoyiliga asoslanadi?",
        "options": [
            {
                "option_text": "Navbat",
                "is_correct": false
            },
            {
                "option_text": "To'plam",
                "is_correct": false
            },
            {
                "option_text": "Stack",
                "is_correct": true
            },
            {
                "option_text": "Xotira",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Saralash algoritmlaridan qaysi biri tez ishlaydi?",
        "options": [
            {
                "option_text": "Bubble sort",
                "is_correct": false
            },
            {
                "option_text": "Selection sort",
                "is_correct": false
            },
            {
                "option_text": "Quick sort",
                "is_correct": true
            },
            {
                "option_text": "Insertion sort",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Ma'lumotlarni qidirish algoritmlaridan qaysi biri samarali?",
        "options": [
            {
                "option_text": "Chiziqli qidirish",
                "is_correct": false
            },
            {
                "option_text": "Binar qidirish",
                "is_correct": true
            },
            {
                "option_text": "Hashlash",
                "is_correct": false
            },
            {
                "option_text": "Og'irlik qidirish",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Dynamic programming nima?",
        "options": [
            {
                "option_text": "Statik kodni optimallashtirish",
                "is_correct": false
            },
            {
                "option_text": "Kichik masalalarni katta masalalar orqali yechish",
                "is_correct": true
            },
            {
                "option_text": "Ma'lumotlarni dinamik o'zgartirish",
                "is_correct": false
            },
            {
                "option_text": "Tarmoqlanuvchi algoritmlar yaratish",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Algoritmning murakkabligi qaysi usul bilan o'lchanadi?",
        "options": [
            {
                "option_text": "Chiziqli va kvadrat murakkablik",
                "is_correct": false
            },
            {
                "option_text": "O'zgarmas va logarifmik murakkablik",
                "is_correct": false
            },
            {
                "option_text": "Asimptotik murakkablik",
                "is_correct": true
            },
            {
                "option_text": "Progressiv va regressiv murakkablik",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Ma'lumotlar strukturalaridan qaysi biri o'zida kalit-qiymat juftligini saqlaydi?",
        "options": [
            {
                "option_text": "List",
                "is_correct": false
            },
            {
                "option_text": "Tuple",
                "is_correct": false
            },
            {
                "option_text": "Dictionary",
                "is_correct": true
            },
            {
                "option_text": "Set",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Greedy algoritmlar qanday ishlaydi?",
        "options": [
            {
                "option_text": "Har doim eng yaxshi lokal yechimni tanlaydi",
                "is_correct": true
            },
            {
                "option_text": "Eng yomon lokal yechimni tanlaydi",
                "is_correct": false
            },
            {
                "option_text": "Barcha imkoniyatlarni sinab ko'radi",
                "is_correct": false
            },
            {
                "option_text": "Bir necha lokal yechimlarni birlashtiradi",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Tarmoqlanish algoritmlarida qaysi operator ishlatiladi?",
        "options": [
            {
                "option_text": "if-else",
                "is_correct": true
            },
            {
                "option_text": "while",
                "is_correct": false
            },
            {
                "option_text": "for",
                "is_correct": false
            },
            {
                "option_text": "continue",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Qaysi ma'lumotlar tuzilmasi FIFO tamoyiliga asoslanadi?",
        "options": [
            {
                "option_text": "Stack",
                "is_correct": false
            },
            {
                "option_text": "Navbat",
                "is_correct": true
            },
            {
                "option_text": "To'plam",
                "is_correct": false
            },
            {
                "option_text": "Ro'yxat",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Rekursiv algoritmlarda qanday shart bo'lishi kerak?",
        "options": [
            {
                "option_text": "Boshlang'ich shart",
                "is_correct": false
            },
            {
                "option_text": "Tugatish sharti",
                "is_correct": true
            },
            {
                "option_text": "Chiziqli shart",
                "is_correct": false
            },
            {
                "option_text": "Masshtab sharti",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Qaysi ma'lumotlar tuzilmasi bir nechta elementlarni tartib bilan saqlash imkonini beradi?",
        "options": [
            {
                "option_text": "Stack",
                "is_correct": false
            },
            {
                "option_text": "Ro'yxat (List)",
                "is_correct": true
            },
            {
                "option_text": "Navbat (Queue)",
                "is_correct": false
            },
            {
                "option_text": "Hash jadvali",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Navbat (Queue) qanday tartibda ishlaydi?",
        "options": [
            {
                "option_text": "LIFO",
                "is_correct": false
            },
            {
                "option_text": "FIFO",
                "is_correct": true
            },
            {
                "option_text": "Random",
                "is_correct": false
            },
            {
                "option_text": "Hech qanday tartib yo'q",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Ma'lumotlar tuzilmasining qaysi biri o'zgaruvchan uzunlikka ega?",
        "options": [
            {
                "option_text": "String",
                "is_correct": false
            },
            {
                "option_text": "Stack",
                "is_correct": false
            },
            {
                "option_text": "List",
                "is_correct": true
            },
            {
                "option_text": "Tuple",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Qaysi ma'lumotlar tuzilmasida elementlar juftlik sifatida saqlanadi?",
        "options": [
            {
                "option_text": "To'plam (Set)",
                "is_correct": false
            },
            {
                "option_text": "Stack",
                "is_correct": false
            },
            {
                "option_text": "Dictionary",
                "is_correct": true
            },
            {
                "option_text": "Navbat (Queue)",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Stack ma'lumotlar tuzilmasi qanday ishlaydi?",
        "options": [
            {
                "option_text": "FIFO",
                "is_correct": false
            },
            {
                "option_text": "LIFO",
                "is_correct": true
            },
            {
                "option_text": "Random",
                "is_correct": false
            },
            {
                "option_text": "Chiziqli",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Qaysi ma'lumotlar tuzilmasi takrorlanmaydigan elementlarni saqlaydi?",
        "options": [
            {
                "option_text": "To'plam (Set)",
                "is_correct": true
            },
            {
                "option_text": "List",
                "is_correct": false
            },
            {
                "option_text": "Stack",
                "is_correct": false
            },
            {
                "option_text": "Dictionary",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Linked List qanday tuzilgan?",
        "options": [
            {
                "option_text": "Tarmoq shaklida",
                "is_correct": false
            },
            {
                "option_text": "Ketma-ket bog'langan tugunlar",
                "is_correct": true
            },
            {
                "option_text": "Matritsa shaklida",
                "is_correct": false
            },
            {
                "option_text": "Aylana shaklida",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Hash jadvali qanday ishlaydi?",
        "options": [
            {
                "option_text": "Kalitlarga asoslangan indekslash bilan",
                "is_correct": true
            },
            {
                "option_text": "Tartibsiz saqlash bilan",
                "is_correct": false
            },
            {
                "option_text": "FIFO tamoyili bilan",
                "is_correct": false
            },
            {
                "option_text": "LIFO tamoyili bilan",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Ma'lumotlar tuzilmasida o'z ichiga boshqasini oladigan struktura qanday nomlanadi?",
        "options": [
            {
                "option_text": "Linked List",
                "is_correct": false
            },
            {
                "option_text": "Rekursiv tuzilmalar",
                "is_correct": true
            },
            {
                "option_text": "To'plam",
                "is_correct": false
            },
            {
                "option_text": "Statik strukturasi",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Qaysi ma'lumotlar tuzilmasida elementlar qo'shilishi va o'chirilishi faqat bitta uchidan amalga oshiriladi?",
        "options": [
            {
                "option_text": "Stack",
                "is_correct": true
            },
            {
                "option_text": "Queue",
                "is_correct": false
            },
            {
                "option_text": "List",
                "is_correct": false
            },
            {
                "option_text": "Dictionary",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Array qanday ma'lumotlar tuzilmasi?",
        "options": [
            {
                "option_text": "Dinamik",
                "is_correct": false
            },
            {
                "option_text": "Statik",
                "is_correct": false
            },
            {
                "option_text": "Katta hajmdagi ma'lumotlarni saqlaydi",
                "is_correct": false
            },
            {
                "option_text": "Barcha elementlar bir xil turdagi",
                "is_correct": true
            }
        ]
    },
    {
        "question_text": "Navbat (Queue) ma'lumotlar tuzilmasida elementlar qaysi tomonidan qo'shiladi?",
        "options": [
            {
                "option_text": "Boshi",
                "is_correct": false
            },
            {
                "option_text": "O'rtasi",
                "is_correct": false
            },
            {
                "option_text": "Oxiri",
                "is_correct": true
            },
            {
                "option_text": "Har qanday qismidan",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Dvigatel algoritmi qanday tuzilgan?",
        "options": [
            {
                "option_text": "Ma'lumotlarni ketma-ket tahlil qilish bilan",
                "is_correct": true
            },
            {
                "option_text": "Parallel algoritm bilan",
                "is_correct": false
            },
            {
                "option_text": "Har bir nuqtadan qayta ishlash bilan",
                "is_correct": false
            },
            {
                "option_text": "Ishlamaydi",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Ma'lumotlar tuzilmasida minimal o'rin egallovchi qanday ma'lumot turi mavjud?",
        "options": [
            {
                "option_text": "Int",
                "is_correct": false
            },
            {
                "option_text": "Float",
                "is_correct": false
            },
            {
                "option_text": "Boolean",
                "is_correct": true
            },
            {
                "option_text": "String",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Qaysi ma'lumotlar tuzilmasida har bir element o'zidan keyingisiga ko'rsatadi?",
        "options": [
            {
                "option_text": "Queue",
                "is_correct": false
            },
            {
                "option_text": "Stack",
                "is_correct": false
            },
            {
                "option_text": "Linked List",
                "is_correct": true
            },
            {
                "option_text": "Set",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Rekursiv algoritm nima?",
        "options": [
            {
                "option_text": "Algoritmning bir qismi o‘zini qaytadan chaqiradigan jarayon",
                "is_correct": true
            },
            {
                "option_text": "Algoritmning bir qismi sikllardan iborat bo‘lgan jarayon",
                "is_correct": false
            },
            {
                "option_text": "Faqat bir marta bajariladigan algoritm",
                "is_correct": false
            },
            {
                "option_text": "Algoritmning parallel ishlovchi qismi",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Rekursiyaga asoslangan algoritmlarning asosiy elementi nima?",
        "options": [
            {
                "option_text": "Ma'lumotlarni qatorlar orqali ishlash",
                "is_correct": false
            },
            {
                "option_text": "Algoritmning o‘zini qaytadan chaqirishi",
                "is_correct": true
            },
            {
                "option_text": "Doimiy qiymatlar bilan ishlash",
                "is_correct": false
            },
            {
                "option_text": "Algoritmning bir marta bajarilishi",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Rekursiv algoritmda qachon to‘xtash sharti kerak bo‘ladi?",
        "options": [
            {
                "option_text": "Har bir chaqiriqda",
                "is_correct": false
            },
            {
                "option_text": "Faqat oxirgi chaqiriqda",
                "is_correct": false
            },
            {
                "option_text": "Bazaviy holatga yetilganda",
                "is_correct": true
            },
            {
                "option_text": "Faqat siklda",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Quyidagi algoritmlardan qaysi biri rekursiv?",
        "options": [
            {
                "option_text": "Merge Sort",
                "is_correct": true
            },
            {
                "option_text": "Bubble Sort",
                "is_correct": false
            },
            {
                "option_text": "Selection Sort",
                "is_correct": false
            },
            {
                "option_text": "Insertion Sort",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Fibonachchi sonlarini rekursiv algoritm yordamida hisoblash qaysi tamoyilga asoslanadi?",
        "options": [
            {
                "option_text": "Bazaviy qiymatni qo‘shish",
                "is_correct": false
            },
            {
                "option_text": "Har bir sonni oldingi ikki sondan hosil qilish",
                "is_correct": true
            },
            {
                "option_text": "Elementlarni ketma-ket tartiblash",
                "is_correct": false
            },
            {
                "option_text": "Har bir elementni ikki marta ko‘paytirish",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Qaysi muammoni yechishda rekursiv yondashuv ishlatilmaydi?",
        "options": [
            {
                "option_text": "Fibonachchi sonlari",
                "is_correct": false
            },
            {
                "option_text": "Qavslar muvozanatini tekshirish",
                "is_correct": false
            },
            {
                "option_text": "Matritsalarni ko‘paytirish",
                "is_correct": true
            },
            {
                "option_text": "Ikkilik daraxtlarni travers qilish",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Rekursiyaga alternativa bo‘lgan usul nima?",
        "options": [
            {
                "option_text": "Sikl",
                "is_correct": true
            },
            {
                "option_text": "Massiv",
                "is_correct": false
            },
            {
                "option_text": "Funksiya",
                "is_correct": false
            },
            {
                "option_text": "To‘plam",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Tail recursion nima?",
        "options": [
            {
                "option_text": "Rekursiya faqat bazaviy holatda ishlaydi",
                "is_correct": false
            },
            {
                "option_text": "Rekursiv chaqiriq faqat oxirgi operatsiya sifatida ishlatiladi",
                "is_correct": true
            },
            {
                "option_text": "Rekursiya boshidan oxirigacha davom etadi",
                "is_correct": false
            },
            {
                "option_text": "Rekursiv chaqiriq o‘rtada tugaydi",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Quyidagi qaysi muammo Divide and Conquer yondashuvida ishlatiladi?",
        "options": [
            {
                "option_text": "Merge Sort",
                "is_correct": true
            },
            {
                "option_text": "Linear Search",
                "is_correct": false
            },
            {
                "option_text": "Bubble Sort",
                "is_correct": false
            },
            {
                "option_text": "Hashing",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Rekursiv algoritmlarda stekning roli nima?",
        "options": [
            {
                "option_text": "Har bir chaqiriqni saqlab qolish uchun",
                "is_correct": true
            },
            {
                "option_text": "Ma'lumotlarni o‘zlashtirish uchun",
                "is_correct": false
            },
            {
                "option_text": "Qayta ishlangan elementlarni yig‘ish uchun",
                "is_correct": false
            },
            {
                "option_text": "Faqat bazaviy holatlarni ko‘rsatish uchun",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Binary Search algoritmining rekursiv versiyasi qaysi holatda ishlaydi?",
        "options": [
            {
                "option_text": "Elementlar o‘sish tartibida bo‘lganda",
                "is_correct": true
            },
            {
                "option_text": "Elementlar kamayish tartibida bo‘lganda",
                "is_correct": false
            },
            {
                "option_text": "Har qanday tartibda bo‘lganda",
                "is_correct": false
            },
            {
                "option_text": "Faqat bitta element qolganda",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Rekursiv funksiyalar qanday samarali bo‘ladi?",
        "options": [
            {
                "option_text": "Har bir chaqiriq yangi massiv yaratadi",
                "is_correct": false
            },
            {
                "option_text": "Katta muammoni kichik qismlarga bo‘lib yechadi",
                "is_correct": true
            },
            {
                "option_text": "Har bir chaqiriq yangi ma'lumotlar tuzilmasini yaratadi",
                "is_correct": false
            },
            {
                "option_text": "Rekursiya sikl o‘rniga ishlatiladi",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Rekursiv funksiyaning bazaviy holati nima uchun muhim?",
        "options": [
            {
                "option_text": "To‘xtovsiz chaqiriqlarni oldini olish uchun",
                "is_correct": true
            },
            {
                "option_text": "Algoritmni tezlashtirish uchun",
                "is_correct": false
            },
            {
                "option_text": "Funksiyalarni ketma-ketlikda ishlatish uchun",
                "is_correct": false
            },
            {
                "option_text": "Siklni tashkil etish uchun",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Factorial funksiyasini rekursiv algoritm bilan qanday topish mumkin?",
        "options": [
            {
                "option_text": "n * factorial(n-1)",
                "is_correct": true
            },
            {
                "option_text": "n + factorial(n+1)",
                "is_correct": false
            },
            {
                "option_text": "n - factorial(n-1)",
                "is_correct": false
            },
            {
                "option_text": "n * factorial(n+2)",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Rekursiv algoritmlar qachon samarali ishlaydi?",
        "options": [
            {
                "option_text": "Muammoni kichik qismlarga ajratib yechish mumkin bo‘lganda",
                "is_correct": true
            },
            {
                "option_text": "Muammoni sikl bilan hal qilish mumkin bo‘lganda",
                "is_correct": false
            },
            {
                "option_text": "Muammoni to‘plam bilan hal qilish mumkin bo‘lganda",
                "is_correct": false
            },
            {
                "option_text": "Faqat bazaviy holat mavjud bo‘lganda",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Ma'lumotlarni qidirishning qaysi algoritmi chiziqli tartibda ishlaydi?",
        "options": [
            {
                "option_text": "Binary Search",
                "is_correct": false
            },
            {
                "option_text": "Linear Search",
                "is_correct": true
            },
            {
                "option_text": "Hash qidirish",
                "is_correct": false
            },
            {
                "option_text": "Depth-First Search",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Binary Search algoritmi qanday sharoitda ishlaydi?",
        "options": [
            {
                "option_text": "Istalgan ma'lumotlar to'plamida",
                "is_correct": false
            },
            {
                "option_text": "Saralangan ma'lumotlar to'plamida",
                "is_correct": true
            },
            {
                "option_text": "Tasodifiy ma'lumotlar to'plamida",
                "is_correct": false
            },
            {
                "option_text": "Faqat sonlarda",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Hash qidirish algoritmi qaysi ma'lumot tuzilmasida samarali ishlaydi?",
        "options": [
            {
                "option_text": "Stack",
                "is_correct": false
            },
            {
                "option_text": "Queue",
                "is_correct": false
            },
            {
                "option_text": "Hash jadvali",
                "is_correct": true
            },
            {
                "option_text": "Linked List",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Qaysi qidirish algoritmi ikkilik bo'linishga asoslanadi?",
        "options": [
            {
                "option_text": "Linear Search",
                "is_correct": false
            },
            {
                "option_text": "Binary Search",
                "is_correct": true
            },
            {
                "option_text": "Breadth-First Search",
                "is_correct": false
            },
            {
                "option_text": "Interpolation Search",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Depth-First Search qaysi ma'lumot tuzilmasida ishlatiladi?",
        "options": [
            {
                "option_text": "Graflar",
                "is_correct": true
            },
            {
                "option_text": "Ro'yxatlar",
                "is_correct": false
            },
            {
                "option_text": "Navbat ",
                "is_correct": false
            },
            {
                "option_text": "Massivlar",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Qidirish algoritmlarida vaqt murakkabligi qaysi ko'rinishda o'lchanadi?",
        "options": [
            {
                "option_text": "Big-O notatsiyasi",
                "is_correct": true
            },
            {
                "option_text": "Logarifmik",
                "is_correct": false
            },
            {
                "option_text": "Polinomial",
                "is_correct": false
            },
            {
                "option_text": "Kvadrat",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Breadth-First Search algoritmi qanday ma'lumot tuzilmasidan foydalanadi?",
        "options": [
            {
                "option_text": "Stack ",
                "is_correct": false
            },
            {
                "option_text": "Queue",
                "is_correct": true
            },
            {
                "option_text": "Hash jadvali",
                "is_correct": false
            },
            {
                "option_text": "Linked List",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Ma'lumotlarni qidirishda eng samarali algoritm qaysi?",
        "options": [
            {
                "option_text": "Binary Search",
                "is_correct": false
            },
            {
                "option_text": "Linear Search",
                "is_correct": false
            },
            {
                "option_text": "Hash qidirish",
                "is_correct": true
            },
            {
                "option_text": "Greedy qidirish",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Binary Search algoritmining vaqt murakkabligi qanday?",
        "options": [
            {
                "option_text": "O(n)",
                "is_correct": false
            },
            {
                "option_text": "O(log n)",
                "is_correct": true
            },
            {
                "option_text": "O(n²)",
                "is_correct": false
            },
            {
                "option_text": "O(1)",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Interpolation Search algoritmi qanday qidiruvda ishlatiladi?",
        "options": [
            {
                "option_text": "Chiziqli ma'lumotlar",
                "is_correct": false
            },
            {
                "option_text": "Noaniq ma'lumotlar",
                "is_correct": false
            },
            {
                "option_text": "Saralangan sonli massivlar",
                "is_correct": true
            },
            {
                "option_text": "Masshtabli ma'lumotlar",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Greedy qidirish algoritmi qaysi prinsip asosida ishlaydi?",
        "options": [
            {
                "option_text": "Har safar eng yaxshi lokal yechimni tanlash",
                "is_correct": true
            },
            {
                "option_text": "Barcha imkoniyatlarni sinab ko'rish",
                "is_correct": false
            },
            {
                "option_text": "Bir nechta lokal yechimlarni qo'shish",
                "is_correct": false
            },
            {
                "option_text": "Cheksiz takrorlash ",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Binary Search algoritmida qanday shart bo'lishi kerak?",
        "options": [
            {
                "option_text": "Ma'lumotlar saralangan bo'lishi kerak",
                "is_correct": true
            },
            {
                "option_text": "Ma'lumotlar tasodifiy bo'lishi kerak",
                "is_correct": false
            },
            {
                "option_text": "Qidirish davomiy bo'lishi kerak",
                "is_correct": false
            },
            {
                "option_text": "Barcha ma'lumotlar mavjud bo'lishi kerak",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Qaysi qidiruv algoritmi parallel qidirishda ko'proq ishlatiladi? ",
        "options": [
            {
                "option_text": "Depth-First Search",
                "is_correct": false
            },
            {
                "option_text": "Breadth-First Search",
                "is_correct": false
            },
            {
                "option_text": "Linear Search",
                "is_correct": false
            },
            {
                "option_text": "Hash qidirish",
                "is_correct": true
            }
        ]
    },
    {
        "question_text": "Hash funksiyasi qanday ishlaydi?",
        "options": [
            {
                "option_text": "Kalitlarni indekslash orqali",
                "is_correct": true
            },
            {
                "option_text": "Tartibni saqlash orqali",
                "is_correct": false
            },
            {
                "option_text": "LIFO tamoyiliga asoslanadi",
                "is_correct": false
            },
            {
                "option_text": "Kalitsiz qidirish",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Breadth-First Search qaysi muammoni hal qilishda samarali?",
        "options": [
            {
                "option_text": "Minimal yo'l topish",
                "is_correct": true
            },
            {
                "option_text": "Maksimal qiymat topish",
                "is_correct": false
            },
            {
                "option_text": "Saralash",
                "is_correct": false
            },
            {
                "option_text": "O'rtacha qiymat topish",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Xeshlash algoritmi nima uchun ishlatiladi?",
        "options": [
            {
                "option_text": "Ma'lumotlarni saralash uchun",
                "is_correct": false
            },
            {
                "option_text": "Ma'lumotlarni qidirish va indekslash uchun",
                "is_correct": true
            },
            {
                "option_text": "Ma'lumotlarni zichlash uchun",
                "is_correct": false
            },
            {
                "option_text": "Matnni tahlil qilish uchun",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Hash jadvali qanday tuziladi?",
        "options": [
            {
                "option_text": "Stack yordamida",
                "is_correct": false
            },
            {
                "option_text": "Kalit va qiymat juftliklari yordamida",
                "is_correct": true
            },
            {
                "option_text": "Navbat orqali",
                "is_correct": false
            },
            {
                "option_text": "Massivlardan foydalanib",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Hash funksiyasining vazifasi nima?",
        "options": [
            {
                "option_text": "Elementlarni ma'lum bir tartibda joylashtirish",
                "is_correct": false
            },
            {
                "option_text": "Ma'lumotlarni boshqarish",
                "is_correct": false
            },
            {
                "option_text": "Kalitlarni indekslash orqali qiymatlarni tez topish",
                "is_correct": true
            },
            {
                "option_text": "Elementlarni tozalash",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Xesh to'qnashuvi (collision) qachon yuz beradi?",
        "options": [
            {
                "option_text": "Ikkita kalit bir xil qiymatni qaytaradi",
                "is_correct": false
            },
            {
                "option_text": "Ikkita turli kalit bir xil hash qiymatini qaytaradi",
                "is_correct": true
            },
            {
                "option_text": "Hash jadvali to'ladi",
                "is_correct": false
            },
            {
                "option_text": "Xotira hajmi tugaydi",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Xesh to'qnashuvini hal qilish usullaridan qaysi biri keng tarqalgan?",
        "options": [
            {
                "option_text": "Qator usuli",
                "is_correct": false
            },
            {
                "option_text": "Linear probing",
                "is_correct": true
            },
            {
                "option_text": "LIFO tamoyili",
                "is_correct": false
            },
            {
                "option_text": "Binary search",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Xesh jadvalining afzalliklaridan biri nima?",
        "options": [
            {
                "option_text": "Har doim maksimal tezlikda ishlaydi",
                "is_correct": false
            },
            {
                "option_text": "O(1) vaqt murakkabligida qidirish imkonini beradi",
                "is_correct": true
            },
            {
                "option_text": "Ma'lumotlarni qayta tartiblaydi",
                "is_correct": false
            },
            {
                "option_text": "U doim tartiblangan ma'lumot bilan ishlaydi",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Xeshlash algoritmlari qaysi sohada keng qo'llaniladi?",
        "options": [
            {
                "option_text": "Tasvirlarni qayta ishlash",
                "is_correct": false
            },
            {
                "option_text": "Kriptografiya va ma'lumotlar xavfsizligi",
                "is_correct": true
            },
            {
                "option_text": "Massivlar bilan ishlash",
                "is_correct": false
            },
            {
                "option_text": "Matnli ma'lumotlarni tahlil qilish",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Hash funksiyasi qanday xususiyatga ega bo'lishi kerak?",
        "options": [
            {
                "option_text": "Deterministik bo'lishi kerak",
                "is_correct": true
            },
            {
                "option_text": "Tasodifiy bo'lishi kerak",
                "is_correct": false
            },
            {
                "option_text": "Har safar har xil natija qaytarishi kerak",
                "is_correct": false
            },
            {
                "option_text": "Faqat kichik massivlarga moslashgan bo'lishi kerak",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Open Addressing usulining maqsadi nima?",
        "options": [
            {
                "option_text": "Xotira tejash",
                "is_correct": false
            },
            {
                "option_text": "Xesh to'qnashuvlarini oldini olish",
                "is_correct": true
            },
            {
                "option_text": "Kalitlarni qayta ishlash",
                "is_correct": false
            },
            {
                "option_text": "Masshtablash imkonini yaratish",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Xesh jadvalidagi birlamchi indeks nima uchun ishlatiladi?",
        "options": [
            {
                "option_text": "Tezroq qidirish uchun",
                "is_correct": true
            },
            {
                "option_text": "Yangi ma'lumotlar kiritish uchun",
                "is_correct": false
            },
            {
                "option_text": "Saralash uchun",
                "is_correct": false
            },
            {
                "option_text": "Massivni zichlash uchun",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Double Hashing nima?",
        "options": [
            {
                "option_text": "Hash funksiyalarini ikki marta qo'llash",
                "is_correct": false
            },
            {
                "option_text": "Ikkita hash jadvali yaratish",
                "is_correct": false
            },
            {
                "option_text": "To'qnashuvlarni oldini olish uchun ikkita turli hash funksiyasidan foydalanish",
                "is_correct": true
            },
            {
                "option_text": "Bir xil kalitlar uchun ikkita qiymat qaytarish",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Xeshlashda foydalaniladigan murakkablik darajasi qanday?",
        "options": [
            {
                "option_text": "O(n)",
                "is_correct": false
            },
            {
                "option_text": "O(1)",
                "is_correct": true
            },
            {
                "option_text": "O(log n)",
                "is_correct": false
            },
            {
                "option_text": "O(n^2)",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Perfect Hashing nima?",
        "options": [
            {
                "option_text": "To'liq qamrovli ma'lumotlar bazasi yaratish",
                "is_correct": false
            },
            {
                "option_text": "Har bir kalit uchun alohida hash funksiyasini topish",
                "is_correct": false
            },
            {
                "option_text": "To'qnashuvlarni butunlay yo'qotish uchun hash funksiyalarni optimallashtirish",
                "is_correct": true
            },
            {
                "option_text": "Kalitlarni zichlash",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Hash jadvalidan ma'lumotlarni qidirishda vaqt murakkabligi qanday bo'lishi mumkin?",
        "options": [
            {
                "option_text": "O(n)",
                "is_correct": false
            },
            {
                "option_text": "O(log n)",
                "is_correct": false
            },
            {
                "option_text": "O(1)",
                "is_correct": true
            },
            {
                "option_text": "O(n^2)",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Hashlash kriptografiyada nima uchun ishlatiladi?",
        "options": [
            {
                "option_text": "Ma'lumotlarni siqish uchun",
                "is_correct": false
            },
            {
                "option_text": "Ma'lumotlarni shifrlash uchun",
                "is_correct": false
            },
            {
                "option_text": "Xavfsiz qidiruv va autentifikatsiya uchun",
                "is_correct": true
            },
            {
                "option_text": "Faoliyatlarni monitor qilish uchun",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Saralashning asosiy maqsadi nima?",
        "options": [
            {
                "option_text": "Ma’lumotlarni saqlash",
                "is_correct": false
            },
            {
                "option_text": "Ma’lumotlarni tasniflash",
                "is_correct": false
            },
            {
                "option_text": "Ma’lumotlarni tartiblashtirish",
                "is_correct": true
            },
            {
                "option_text": "Ma’lumotlarni o‘zgartirish",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Saralash algoritmi qanday ishlaydi?",
        "options": [
            {
                "option_text": "Ma’lumotlarni yig‘adi",
                "is_correct": false
            },
            {
                "option_text": "Ma’lumotlarni qayta ishlaydi",
                "is_correct": false
            },
            {
                "option_text": "Ma’lumotlarni tartib bilan joylashtiradi",
                "is_correct": true
            },
            {
                "option_text": "Ma’lumotlarni o‘chirish bilan shug‘ullanadi",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Quyidagi usullardan qaysi biri saralashning qat’iy usuliga kiradi?",
        "options": [
            {
                "option_text": "Bubble sort",
                "is_correct": true
            },
            {
                "option_text": "Random sort",
                "is_correct": false
            },
            {
                "option_text": "Manual sort",
                "is_correct": false
            },
            {
                "option_text": "Quick sort",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Saralashning qat'iy usullaridan biri bo'lgan \"Bubble Sort\" algoritmining asosiy xususiyati nima?",
        "options": [
            {
                "option_text": "Ma’lumotlarni tekshirmasdan tartiblash",
                "is_correct": false
            },
            {
                "option_text": "Har bir elementni solishtirib almashtirish",
                "is_correct": true
            },
            {
                "option_text": "Faqat oxirgi elementni ko‘rib chiqish",
                "is_correct": false
            },
            {
                "option_text": "Tasodifiy ravishda joylashtirish",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "\"Quick Sort\" algoritmining samaradorligi qanday baholanadi?",
        "options": [
            {
                "option_text": "O(n^2)",
                "is_correct": false
            },
            {
                "option_text": "O(n log n)",
                "is_correct": true
            },
            {
                "option_text": "O(n)",
                "is_correct": false
            },
            {
                "option_text": "O(log n)",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Quyidagi saralash usullaridan qaysi biri \"Divide and Conquer\" prinsipiga asoslanadi?",
        "options": [
            {
                "option_text": "Bubble Sort",
                "is_correct": false
            },
            {
                "option_text": "Quick Sort",
                "is_correct": true
            },
            {
                "option_text": "Selection Sort",
                "is_correct": false
            },
            {
                "option_text": "Insertion Sort",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "\"Merge Sort\" algoritmida qaysi operatsiya eng ko’p vaqt talab qiladi?",
        "options": [
            {
                "option_text": "Ma’lumotlarni birlashtirish",
                "is_correct": true
            },
            {
                "option_text": "Ma’lumotlarni ajratish",
                "is_correct": false
            },
            {
                "option_text": "Ma’lumotlarni qayta ishlash",
                "is_correct": false
            },
            {
                "option_text": "Ma’lumotlarni o‘chirish",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "\"Selection Sort\" algoritmi qanday ishlaydi?",
        "options": [
            {
                "option_text": "Har bir qadami bilan minimal elementni tanlab joylashtiradi",
                "is_correct": true
            },
            {
                "option_text": "Maksimal elementni har safar oxiriga qo‘yadi",
                "is_correct": false
            },
            {
                "option_text": "Faqat bir martta o‘zgartiradi",
                "is_correct": false
            },
            {
                "option_text": "Har bir elementni tekshirmasdan tartiblash",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Insertion sort algoritmi qachon samarali bo‘ladi?",
        "options": [
            {
                "option_text": "Katta hajmdagi ma’lumotlarda",
                "is_correct": false
            },
            {
                "option_text": "Kichik va qisman tartiblangan ma’lumotlarda",
                "is_correct": true
            },
            {
                "option_text": "Katta va tasodifiy ma’lumotlarda",
                "is_correct": false
            },
            {
                "option_text": "Ma’lumotlar hajmi ahamiyatsiz",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Saralash algoritmlari samaradorligi qanday o‘lchanadi?",
        "options": [
            {
                "option_text": "Algoritmning ishlash vaqti va operatsiyalar soni",
                "is_correct": true
            },
            {
                "option_text": "Ma’lumotlarni qayta ishlash jarayoni",
                "is_correct": false
            },
            {
                "option_text": "Algoritmni yozish qiyinligi",
                "is_correct": false
            },
            {
                "option_text": "Ma’lumotlar hajmi",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Quyidagi saralash algoritmlaridan qaysi biri ketma-ketlikni to‘g‘ri tartibga keltirish uchun kamroq almashishlarni amalga oshiradi?",
        "options": [
            {
                "option_text": "Bubble Sort",
                "is_correct": false
            },
            {
                "option_text": "Selection Sort",
                "is_correct": false
            },
            {
                "option_text": "Merge Sort",
                "is_correct": false
            },
            {
                "option_text": "Insertion Sort",
                "is_correct": true
            }
        ]
    },
    {
        "question_text": "Saralash algoritmlarida O(n^2) algoritmlar qanday xususiyatlarga ega?",
        "options": [
            {
                "option_text": "Samarador va tez ishlaydi",
                "is_correct": false
            },
            {
                "option_text": "Samarador emas, faqat kichik ma’lumotlar uchun yaxshi",
                "is_correct": true
            },
            {
                "option_text": "Har doim samarador",
                "is_correct": false
            },
            {
                "option_text": "Har doim eng yaxshi natija beradi",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "\"Merge Sort\" algoritmi qanday ishlaydi?",
        "options": [
            {
                "option_text": "Ma’lumotlarni bitta blokda tartiblash",
                "is_correct": false
            },
            {
                "option_text": "Ma’lumotlarni ikkiga ajratib, qayta birlashtiradi",
                "is_correct": true
            },
            {
                "option_text": "Faqat minimal elementni joylashtiradi",
                "is_correct": false
            },
            {
                "option_text": "Maksimal elementni tartiblaydi",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Saralash algoritmlarining samaradorligini baholashda asosiy parametr nima?",
        "options": [
            {
                "option_text": "Algoritmni yozish uchun kerak bo‘lgan vaqt",
                "is_correct": false
            },
            {
                "option_text": "Algoritmni sinab ko‘rish soni",
                "is_correct": false
            },
            {
                "option_text": "Algoritmning ishlash murakkabligi va vaqti",
                "is_correct": true
            },
            {
                "option_text": "Algoritmda ma’lumotlar miqdori",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Quick Sort algoritmining eng yaxshi holatdagi ishlash samaradorligi qanday?",
        "options": [
            {
                "option_text": "O(n^2)",
                "is_correct": false
            },
            {
                "option_text": "O(n log n)",
                "is_correct": true
            },
            {
                "option_text": "O(log n)",
                "is_correct": false
            },
            {
                "option_text": "O(n)",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "XoaraSort algoritmining asosiy xususiyati nima?",
        "options": [
            {
                "option_text": "Ma’lumotlarni ikki qismga bo‘lish",
                "is_correct": true
            },
            {
                "option_text": "Minimal elementni oxirga qo‘yish",
                "is_correct": false
            },
            {
                "option_text": "Ma’lumotlarni tasodifiy joylashtirish",
                "is_correct": false
            },
            {
                "option_text": "Faqat tartiblangan ma’lumotlarni saralash",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "MergeSort algoritmi qanday ishlaydi?",
        "options": [
            {
                "option_text": "Ma’lumotlarni tasodifiy tartiblash",
                "is_correct": false
            },
            {
                "option_text": "Ma’lumotlarni ajratish va birlashtirish",
                "is_correct": true
            },
            {
                "option_text": "Har bir qadami bilan minimal elementni ajratish",
                "is_correct": false
            },
            {
                "option_text": "Maksimal elementni oxirga qo‘yish",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "SelectionSort algoritmi qanday usul bilan saralaydi?",
        "options": [
            {
                "option_text": "Har bir qadami bilan minimal elementni tanlash",
                "is_correct": true
            },
            {
                "option_text": "Maksimal elementni tanlash",
                "is_correct": false
            },
            {
                "option_text": "O'rtacha elementni joylashtirish",
                "is_correct": false
            },
            {
                "option_text": "Barcha elementlarni solishtirish",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "RadixSort algoritmi qaysi turdagi ma’lumotlar uchun samarali?",
        "options": [
            {
                "option_text": "Raqamli ma’lumotlar",
                "is_correct": true
            },
            {
                "option_text": "Matnli ma’lumotlar",
                "is_correct": false
            },
            {
                "option_text": "Toifaviy ma’lumotlar",
                "is_correct": false
            },
            {
                "option_text": "Tasodifiy ma’lumotlar",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "QuickSort algoritmi nechta qismlarga bo‘linadi?",
        "options": [
            {
                "option_text": "1 qismga",
                "is_correct": false
            },
            {
                "option_text": "2 qismga",
                "is_correct": true
            },
            {
                "option_text": "3 qismga",
                "is_correct": false
            },
            {
                "option_text": "4 qismga",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "MergeSort algoritmi qaysi prinsipga asoslanadi?",
        "options": [
            {
                "option_text": "Ajratish va birlashtirish",
                "is_correct": true
            },
            {
                "option_text": "Minimal elementni tanlash",
                "is_correct": false
            },
            {
                "option_text": "Maksimal elementni tanlash",
                "is_correct": false
            },
            {
                "option_text": "O'rtacha elementni tanlash",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "QuickSort algoritmi qanday hollarda eng samarali ishlaydi?",
        "options": [
            {
                "option_text": "Tasodifiy ma’lumotlarda",
                "is_correct": true
            },
            {
                "option_text": "Kichik hajmdagi ma’lumotlarda",
                "is_correct": false
            },
            {
                "option_text": "Barcha ma’lumotlar tartiblangan bo'lganda",
                "is_correct": false
            },
            {
                "option_text": "Qisman tartiblangan ma’lumotlarda",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "RadixSort algoritmining eng katta afzalligi nima?",
        "options": [
            {
                "option_text": "Qisqa vaqtda saralaydi",
                "is_correct": false
            },
            {
                "option_text": "Parallel ishlash imkoniyati bor",
                "is_correct": true
            },
            {
                "option_text": "Xotirada kam joy egallaydi",
                "is_correct": false
            },
            {
                "option_text": "Har qanday ma’lumotni qayta ishlay oladi",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "XoaraSort algoritmi nimaga asoslanadi?",
        "options": [
            {
                "option_text": "Minimal elementlarni tanlashga",
                "is_correct": false
            },
            {
                "option_text": "Pivot nuqtaga asoslangan ajratishga",
                "is_correct": true
            },
            {
                "option_text": "Ma’lumotlarni bo‘linishiga",
                "is_correct": false
            },
            {
                "option_text": "Maksimal elementlarni solishtirishga",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "MergeSort algoritmining vaqt murakkabligi qanday?",
        "options": [
            {
                "option_text": "O(n log n)",
                "is_correct": true
            },
            {
                "option_text": "O(n^2)",
                "is_correct": false
            },
            {
                "option_text": "O(log n)",
                "is_correct": false
            },
            {
                "option_text": "O(n)",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "SelectionSort algoritmi nechta almashish bajaradi?",
        "options": [
            {
                "option_text": "Ma’lumotlarning soniga teng",
                "is_correct": true
            },
            {
                "option_text": "Barcha ma’lumotlarni solishtirib",
                "is_correct": false
            },
            {
                "option_text": "Minimal sonli almashish",
                "is_correct": false
            },
            {
                "option_text": "Maksimal almashish",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "RadixSort algoritmi qanday saralashni bajaradi?",
        "options": [
            {
                "option_text": "Qismlar bo‘yicha saralash",
                "is_correct": true
            },
            {
                "option_text": "Tasodifiy saralash",
                "is_correct": false
            },
            {
                "option_text": "Yuzaga kelgan qiymatlarni tartiblash",
                "is_correct": false
            },
            {
                "option_text": "Har bir qiymatni solishtirish",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "QuickSort algoritmi qanday ma’lumotlarni samarali saralaydi?",
        "options": [
            {
                "option_text": "Raqamli ma’lumotlar",
                "is_correct": false
            },
            {
                "option_text": "Matnli ma’lumotlar",
                "is_correct": false
            },
            {
                "option_text": "Katta hajmdagi ma’lumotlar",
                "is_correct": true
            },
            {
                "option_text": "Kichik hajmdagi ma’lumotlar",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "MergeSort algoritmi qaysi holatda ishlamay qolishi mumkin?",
        "options": [
            {
                "option_text": "Katta hajmdagi ma’lumotlarda",
                "is_correct": false
            },
            {
                "option_text": "Tasodifiy ma’lumotlarda",
                "is_correct": false
            },
            {
                "option_text": "Xotirasi kam kompyuterlarda",
                "is_correct": true
            },
            {
                "option_text": "Kichik ma’lumotlarda",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "XoaraSort algoritmining pivot tanlash strategiyasi qaysi?",
        "options": [
            {
                "option_text": "Dastlabki elementni tanlash",
                "is_correct": false
            },
            {
                "option_text": "O‘rta elementni tanlash",
                "is_correct": true
            },
            {
                "option_text": "Oxirgi elementni tanlash",
                "is_correct": false
            },
            {
                "option_text": "Minimal elementni tanlash",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Statik massiv qanday xususiyatga ega?",
        "options": [
            {
                "option_text": "O'lchami o'zgarmas",
                "is_correct": true
            },
            {
                "option_text": "O'lchami dastur davomida o'zgaradi",
                "is_correct": false
            },
            {
                "option_text": "Ma'lumotlarni dinamik saqlaydi",
                "is_correct": false
            },
            {
                "option_text": "Ma'lumotlar hajmiga qarab o'lchamini oshiradi",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Dinamik massivning asosiy afzalligi nima?",
        "options": [
            {
                "option_text": "O'lchami o'zgarmaydi",
                "is_correct": false
            },
            {
                "option_text": "Ma'lumotlar hajmiga qarab kengayishi",
                "is_correct": true
            },
            {
                "option_text": "Ma'lumotlarni ko'paytirish imkoniyati",
                "is_correct": false
            },
            {
                "option_text": "Faoliyatini to'xtatish",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Chiziqli konteynerlar qanday ma'lumotlarni saqlaydi?",
        "options": [
            {
                "option_text": "Bitta qiymat",
                "is_correct": false
            },
            {
                "option_text": "Tartiblangan ma'lumotlar",
                "is_correct": false
            },
            {
                "option_text": "Toifalangan ma'lumotlar",
                "is_correct": false
            },
            {
                "option_text": "Elementlar ketma-ketligi",
                "is_correct": true
            }
        ]
    },
    {
        "question_text": "Statik massivni e'lon qilish qanday amalga oshiriladi?",
        "options": [
            {
                "option_text": "O'lchamini dasturda ko'rsatish",
                "is_correct": false
            },
            {
                "option_text": "O'lchamini keyinroq belgilash",
                "is_correct": false
            },
            {
                "option_text": "Dastur davomida o'lchamini o'zgartirish",
                "is_correct": false
            },
            {
                "option_text": "O'lchamini o'zgartirmasdan e'lon qilish",
                "is_correct": true
            }
        ]
    },
    {
        "question_text": "Dinamik massiv qanday hollarda ishlatiladi?",
        "options": [
            {
                "option_text": "Ma'lumotlar miqdori oldindan ma'lum bo'lsa",
                "is_correct": false
            },
            {
                "option_text": "Ma'lumotlar hajmi o'zgaruvchi bo'lsa",
                "is_correct": true
            },
            {
                "option_text": "Statik massiv mavjud bo'lsa",
                "is_correct": false
            },
            {
                "option_text": "Ma'lumotlar to'xtatilsa",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Iterator nima?",
        "options": [
            {
                "option_text": "Ma'lumotlarni qayta ishlash usuli",
                "is_correct": false
            },
            {
                "option_text": "Ma'lumotlarni tartiblashtirish vositasi",
                "is_correct": false
            },
            {
                "option_text": "Ma'lumotlar to'plamini aylanib chiqish mexanizmi",
                "is_correct": true
            },
            {
                "option_text": "Ma'lumotlarni saqlash vositasi",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Quyidagi iterator turlaridan qaysi biri mavjud?",
        "options": [
            {
                "option_text": "Ko'chiriluvchi iterator",
                "is_correct": false
            },
            {
                "option_text": "Qo'shimcha iterator",
                "is_correct": false
            },
            {
                "option_text": "O'zgaruvchi iterator",
                "is_correct": false
            },
            {
                "option_text": "To'g'ridan-to'g'ri iterator",
                "is_correct": true
            }
        ]
    },
    {
        "question_text": "Chiziqli konteynerlarda iteratorlar qanday rol o'ynaydi?",
        "options": [
            {
                "option_text": "Ma'lumotlarni o'zgartiradi",
                "is_correct": false
            },
            {
                "option_text": "Ma'lumotlarni kiritish va chiqarishda yordam beradi",
                "is_correct": true
            },
            {
                "option_text": "Ma'lumotlar ustida matematik amallar bajaradi",
                "is_correct": false
            },
            {
                "option_text": "Ma'lumotlarni tartiblashda ishlatiladi",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Statik massivni yaratish uchun qaysi operator ishlatiladi?",
        "options": [
            {
                "option_text": "malloc",
                "is_correct": false
            },
            {
                "option_text": "new",
                "is_correct": false
            },
            {
                "option_text": "delete",
                "is_correct": false
            },
            {
                "option_text": "static",
                "is_correct": true
            }
        ]
    },
    {
        "question_text": "Dinamik massivning xotira hajmi qanday belgilanadi?",
        "options": [
            {
                "option_text": "Oldindan belgilanadi",
                "is_correct": false
            },
            {
                "option_text": "Dastur davomida o'zgartiriladi",
                "is_correct": false
            },
            {
                "option_text": "Ma'lumotlarning miqdoriga qarab kengayadi",
                "is_correct": true
            },
            {
                "option_text": "Faqat dastur tugaganida belgilanadi",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Iteratorlar qanday bo'linadi?",
        "options": [
            {
                "option_text": "O'zgaruvchan va o'zgarmas",
                "is_correct": true
            },
            {
                "option_text": "Kengayuvchi va torayuvchi",
                "is_correct": false
            },
            {
                "option_text": "Chap va o'ng",
                "is_correct": false
            },
            {
                "option_text": "Old va yangi",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Chiziqli konteynerlar qanday tuzilmalardan iborat?",
        "options": [
            {
                "option_text": "Grafiklar va daraxtlar",
                "is_correct": false
            },
            {
                "option_text": "Massivlar va ro'yxatlar",
                "is_correct": true
            },
            {
                "option_text": "HashMaplar va massivlar",
                "is_correct": false
            },
            {
                "option_text": "Matnli fayllar",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Statik va dinamik massivlar o'rtasidagi asosiy farq nima?",
        "options": [
            {
                "option_text": "O'lchami o'zgarmas va o'zgartiriladi",
                "is_correct": true
            },
            {
                "option_text": "Statik massiv tezroq ishlaydi",
                "is_correct": false
            },
            {
                "option_text": "Dinamik massiv katta hajmdagi ma'lumotlar uchun mo'ljallangan",
                "is_correct": false
            },
            {
                "option_text": "Statik massiv doimiy xotirada ishlaydi",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Ma'lumotlar to'plamiga kirish uchun iteratorlar qanday qo'llaniladi?",
        "options": [
            {
                "option_text": "Ma'lumotlarni izlash",
                "is_correct": false
            },
            {
                "option_text": "Ma'lumotlarni ketma-ket aylanib chiqish",
                "is_correct": true
            },
            {
                "option_text": "Ma'lumotlarni o'zgartirish",
                "is_correct": false
            },
            {
                "option_text": "Ma'lumotlarni tartiblash",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Dinamik massivning xotirasi qanday boshqariladi?",
        "options": [
            {
                "option_text": "O'lchami doimiy bo'ladi",
                "is_correct": false
            },
            {
                "option_text": "Xotira dinamik tarzda kengayadi",
                "is_correct": true
            },
            {
                "option_text": "Oldindan belgilanadi",
                "is_correct": false
            },
            {
                "option_text": "Xotira avtomatik ravishda tozalanadi",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Bog‘langan ro‘yxat nima?",
        "options": [
            {
                "option_text": "Ma'lumotlarni tartiblashtirish usuli",
                "is_correct": false
            },
            {
                "option_text": "Elementlarning ketma-ketligi, har bir element keyingisiga havola qiladi",
                "is_correct": true
            },
            {
                "option_text": "Ma'lumotlarni saqlash usuli",
                "is_correct": false
            },
            {
                "option_text": "Elementlarni tartib bilan joylashtirish",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Bog‘langan ro‘yxatlar qanday turlarga bo'linadi?",
        "options": [
            {
                "option_text": "Statik va dinamik",
                "is_correct": false
            },
            {
                "option_text": "Chiziqli va bog'lamli",
                "is_correct": false
            },
            {
                "option_text": "Bir bog'lamli va ikki bog'lamli",
                "is_correct": true
            },
            {
                "option_text": "To'g'ridan-to'g'ri va bilvosita",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Bir bog‘lamli bog‘langan ro‘yxatda elementlar qanday bog‘lanadi?",
        "options": [
            {
                "option_text": "Har bir element faqat keyingi elementni ko‘rsatadi",
                "is_correct": true
            },
            {
                "option_text": "Har bir element ikkita bog‘lanishga ega",
                "is_correct": false
            },
            {
                "option_text": "Elementlar bir-biriga bog‘lanmaydi",
                "is_correct": false
            },
            {
                "option_text": "Har bir element oldingi va keyingi elementni ko‘rsatadi",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Ikki bog‘lamli bog‘langan ro‘yxatda har bir element nechta bog‘lanishga ega?",
        "options": [
            {
                "option_text": "Bitta",
                "is_correct": false
            },
            {
                "option_text": "Ikkita",
                "is_correct": true
            },
            {
                "option_text": "Uchta",
                "is_correct": false
            },
            {
                "option_text": "To‘rtta",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Bog‘langan ro‘yxatning bosh qismi qanday nomlanadi?",
        "options": [
            {
                "option_text": "Tugun",
                "is_correct": false
            },
            {
                "option_text": "Ko‘rsatkich",
                "is_correct": false
            },
            {
                "option_text": "Boshlovchi tugun (Head)",
                "is_correct": true
            },
            {
                "option_text": "Nihoya (Tail)",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Chiziqli bog‘langan ro‘yxatlar qanday maqsadda ishlatiladi?",
        "options": [
            {
                "option_text": "Ma'lumotlarni tasodifiy kiritish uchun",
                "is_correct": false
            },
            {
                "option_text": "Ketma-ketlikni saqlash uchun",
                "is_correct": true
            },
            {
                "option_text": "Ma'lumotlarni o'chirish uchun",
                "is_correct": false
            },
            {
                "option_text": "Ma'lumotlarni saralash uchun",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Ikki bog‘lamli bog‘langan ro‘yxatning asosiy afzalligi nima?",
        "options": [
            {
                "option_text": "Xotirani kam band qiladi",
                "is_correct": false
            },
            {
                "option_text": "Har ikki yo‘nalishda aylanib chiqish imkonini beradi",
                "is_correct": true
            },
            {
                "option_text": "Ma'lumotlarni avtomatik tartiblash",
                "is_correct": false
            },
            {
                "option_text": "Har bir element faqat keyingisini ko‘rsatadi",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Bog‘langan ro‘yxatni yaratish uchun qaysi komponentlar kerak?",
        "options": [
            {
                "option_text": "Ma'lumot va ko‘rsatkich",
                "is_correct": true
            },
            {
                "option_text": "Faqat ma'lumot",
                "is_correct": false
            },
            {
                "option_text": "Faqat ko‘rsatkich",
                "is_correct": false
            },
            {
                "option_text": "Ma'lumot, ko‘rsatkich va o‘lcham",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Bog‘langan ro‘yxatlarda ma'lumotlarni qo'shish va o‘chirish qanday amalga oshiriladi?",
        "options": [
            {
                "option_text": "Ma'lumotlar ketma-ket joylashtiriladi",
                "is_correct": false
            },
            {
                "option_text": "Ko‘rsatkichlar orqali bog'lanish o'zgartiriladi",
                "is_correct": true
            },
            {
                "option_text": "Ma'lumotlar oxirgi elementga kiritiladi",
                "is_correct": false
            },
            {
                "option_text": "Ma'lumotlarni ko'chirish orqali",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Bir bog‘lamli ro‘yxatning oxirgi elementi qanday ko'rsatkichga ega?",
        "options": [
            {
                "option_text": "O‘ziga",
                "is_correct": false
            },
            {
                "option_text": "Hech narsaga",
                "is_correct": true
            },
            {
                "option_text": "Keyingi elementga",
                "is_correct": false
            },
            {
                "option_text": "Boshlovchi elementga",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Ikki bog‘lamli bog‘langan ro‘yxatning har bir tuguni qanday ma'lumotlarni o'z ichiga oladi?",
        "options": [
            {
                "option_text": "Faqat ma'lumotlar",
                "is_correct": false
            },
            {
                "option_text": "Oldingi va keyingi elementlarning ko‘rsatkichi",
                "is_correct": true
            },
            {
                "option_text": "Faqat keyingi elementning ko‘rsatkichi",
                "is_correct": false
            },
            {
                "option_text": "Faqat oldingi elementning ko‘rsatkichi",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Bog‘langan ro‘yxatning asosiy kamchiligi nima?",
        "options": [
            {
                "option_text": "Ma'lumotlar ketma-ket joylashtiriladi",
                "is_correct": false
            },
            {
                "option_text": "Har bir elementni izlash ko'p vaqt oladi",
                "is_correct": true
            },
            {
                "option_text": "Ko'p xotira talab qiladi",
                "is_correct": false
            },
            {
                "option_text": "Ma'lumotlarni o‘chirish qiyin",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Ikki bog‘lamli ro‘yxat bilan ishlaganda qaysi amallar oson bajariladi?",
        "options": [
            {
                "option_text": "Faqat o‘chirish",
                "is_correct": false
            },
            {
                "option_text": "Oldingi va keyingi elementga kirish",
                "is_correct": true
            },
            {
                "option_text": "Faqat ma'lumotlarni qo‘shish",
                "is_correct": false
            },
            {
                "option_text": "Faqat ma'lumotlarni tartiblash",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Bog‘langan ro‘yxatlarda xotira qanday boshqariladi?",
        "options": [
            {
                "option_text": "Statik tarzda ajratiladi",
                "is_correct": false
            },
            {
                "option_text": "Har bir tugun uchun dinamik tarzda ajratiladi",
                "is_correct": true
            },
            {
                "option_text": "Faqat boshida ajratiladi",
                "is_correct": false
            },
            {
                "option_text": "Xotira avtomatik tarzda bo‘linadi",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Bir bog‘lamli bog‘langan ro‘yxatda ma'lumotlarni qidirish qanday amalga oshiriladi?",
        "options": [
            {
                "option_text": "To‘g‘ridan-to‘g‘ri elementga kirish",
                "is_correct": false
            },
            {
                "option_text": "Boshidan boshlab ketma-ket qidirish",
                "is_correct": true
            },
            {
                "option_text": "Oxiridan boshlab qidirish",
                "is_correct": false
            },
            {
                "option_text": "Indeks orqali kirish",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Bir bog‘lamli ro‘yxatni yaratishda qaysi amallar talab etiladi?",
        "options": [
            {
                "option_text": "Faqat qo‘shish",
                "is_correct": false
            },
            {
                "option_text": "Ma'lumot qo‘shish va bog‘lanish o‘rnatish",
                "is_correct": true
            },
            {
                "option_text": "Faqat bog‘lanish o‘rnatish",
                "is_correct": false
            },
            {
                "option_text": "Faqat elementni o‘chirish",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Bir bog‘lamli ro‘yxatda har bir element nechta bog‘lanish nuqtasiga ega?",
        "options": [
            {
                "option_text": "Bitta",
                "is_correct": true
            },
            {
                "option_text": "Ikki",
                "is_correct": false
            },
            {
                "option_text": "Uchta",
                "is_correct": false
            },
            {
                "option_text": "To‘rtta",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Bir bog‘lamli ro‘yxatda elementlarni o‘chirish algoritmi qanday amalga oshiriladi?",
        "options": [
            {
                "option_text": "Elementni topish va keyingi elementga ko‘rsatkichni o‘zgartirish",
                "is_correct": true
            },
            {
                "option_text": "Faqat elementni o‘chirish",
                "is_correct": false
            },
            {
                "option_text": "O‘chirilgan elementdan keyingi elementni o‘zgartirish",
                "is_correct": false
            },
            {
                "option_text": "Har doim boshidan o‘chirish",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Ikki bog‘lamli ro‘yxatda ma'lumotlarni qidirish qanday amalga oshiriladi?",
        "options": [
            {
                "option_text": "Har bir elementni tekshirish",
                "is_correct": false
            },
            {
                "option_text": "Indeks orqali to‘g‘ridan-to‘g‘ri kirish",
                "is_correct": false
            },
            {
                "option_text": "Har ikkala yo‘nalishda izlash",
                "is_correct": true
            },
            {
                "option_text": "Ma'lumotlarni avtomatik qidirish",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Ko‘p bog‘lamli ro‘yxat nima?",
        "options": [
            {
                "option_text": "Har bir tugun faqat bitta keyingi tugunni ko‘rsatadi",
                "is_correct": false
            },
            {
                "option_text": "Har bir tugun bir nechta ko‘rsatkichlarga ega",
                "is_correct": true
            },
            {
                "option_text": "Ma'lumotlar bir yo‘nalishda saqlanadi",
                "is_correct": false
            },
            {
                "option_text": "Tugunlar ketma-ket joylashtiriladi",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Bir bog‘lamli ro‘yxatda qo‘shish amali qayerga qo‘shiladi?",
        "options": [
            {
                "option_text": "Boshida",
                "is_correct": false
            },
            {
                "option_text": "Oxirida",
                "is_correct": false
            },
            {
                "option_text": "Faqat o‘rtada",
                "is_correct": false
            },
            {
                "option_text": "Boshida yoki oxirida",
                "is_correct": true
            }
        ]
    },
    {
        "question_text": "Ikki bog‘lamli ro‘yxatda o‘chirish amali qayerdan amalga oshiriladi?",
        "options": [
            {
                "option_text": "Faqat boshidan",
                "is_correct": false
            },
            {
                "option_text": "Faqat oxiridan",
                "is_correct": false
            },
            {
                "option_text": "Har qanday joydan",
                "is_correct": true
            },
            {
                "option_text": "Faqat o‘rtadan",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Bir bog‘lamli ro‘yxatni aylantirish algoritmi qanday?",
        "options": [
            {
                "option_text": "Har bir elementni keyingi element bilan almashtirish",
                "is_correct": false
            },
            {
                "option_text": "Ko‘rsatkichlarni teskari yo‘nalishga o‘zgartirish",
                "is_correct": true
            },
            {
                "option_text": "Ro‘yxatni boshidan o‘chirish",
                "is_correct": false
            },
            {
                "option_text": "Oxiridan boshiga qarab aylantirish",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Ko‘p bog‘lamli ro‘yxatda ma'lumotlarni qanday saqlash mumkin?",
        "options": [
            {
                "option_text": "Har bir element faqat bitta ma'lumotni saqlaydi",
                "is_correct": false
            },
            {
                "option_text": "Har bir tugun bir nechta ko‘rsatkich va ma'lumotni saqlashi mumkin",
                "is_correct": true
            },
            {
                "option_text": "Faqat oxirgi elementda ma'lumot saqlanadi",
                "is_correct": false
            },
            {
                "option_text": "Ro‘yxat faqat boshida ma'lumot saqlaydi",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Ikki bog‘lamli ro‘yxatda ma'lumotlar qanday bog‘lanadi?",
        "options": [
            {
                "option_text": "Faqat oldingi elementga",
                "is_correct": false
            },
            {
                "option_text": "Faqat keyingi elementga",
                "is_correct": false
            },
            {
                "option_text": "Har ikkala oldingi va keyingi elementga",
                "is_correct": true
            },
            {
                "option_text": "Elementlar bog‘lanmaydi",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Ko‘p bog‘lamli ro‘yxatlar nima uchun ishlatiladi?",
        "options": [
            {
                "option_text": "Ma'lumotlarni avtomatik saralash uchun",
                "is_correct": false
            },
            {
                "option_text": "Ierarxik tuzilmalar yaratish uchun",
                "is_correct": true
            },
            {
                "option_text": "Ma'lumotlarni saqlash uchun",
                "is_correct": false
            },
            {
                "option_text": "Xotira tejash uchun",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Bir bog‘lamli ro‘yxatning asosiy kamchiligi nima?",
        "options": [
            {
                "option_text": "Xotirani ko‘p talab qiladi",
                "is_correct": false
            },
            {
                "option_text": "Ma'lumotlarni izlash va kirish sekin",
                "is_correct": true
            },
            {
                "option_text": "Ma'lumotlarni qo‘shish qiyin",
                "is_correct": false
            },
            {
                "option_text": "Ko‘rsatkichlar murakkab",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Ikki bog‘lamli ro‘yxatda oxirgi elementga kirish qanday amalga oshiriladi?",
        "options": [
            {
                "option_text": "Boshidan oxirigacha har bir element orqali o‘tish",
                "is_correct": true
            },
            {
                "option_text": "To‘g‘ridan-to‘g‘ri kirish",
                "is_correct": false
            },
            {
                "option_text": "Nihoyadan boshigacha qaytish",
                "is_correct": false
            },
            {
                "option_text": "Avtomatik qidirish orqali",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Ko‘p bog‘lamli ro‘yxatlarni qanday mantiqiy tasvirlash mumkin?",
        "options": [
            {
                "option_text": "Matritsalar orqali",
                "is_correct": false
            },
            {
                "option_text": "Har bir tugunning ko‘rsatkichi orqali",
                "is_correct": false
            },
            {
                "option_text": "Grafiklar orqali",
                "is_correct": true
            },
            {
                "option_text": "Chiziqli massivlar orqali",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Bir bog‘lamli ro‘yxatda ma'lumotlarni qidirish qaysi algoritm orqali amalga oshiriladi?",
        "options": [
            {
                "option_text": "Binar qidiruv",
                "is_correct": false
            },
            {
                "option_text": "Chiziqli qidiruv",
                "is_correct": true
            },
            {
                "option_text": "To‘g‘ridan-to‘g‘ri kirish",
                "is_correct": false
            },
            {
                "option_text": "Hesh qidiruv",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Bir bog‘lamli ro‘yxat deganda nimani tushunasiz?",
        "options": [
            {
                "option_text": "Ro‘yxatdagi har bir element faqat keyingi elementga ishora qiladi",
                "is_correct": true
            },
            {
                "option_text": "Ro‘yxatdagi har bir element oldingi va keyingi elementlarga ishora qiladi",
                "is_correct": false
            },
            {
                "option_text": "Har bir element ixtiyoriy boshqa elementlarga ishora qiladi",
                "is_correct": false
            },
            {
                "option_text": "Har bir element faqat o‘zidan keyingi va undan oldingi elementlarga ishora qiladi",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Ikki bog‘lamli ro‘yxatda har bir tugun nechta ko‘rsatkichga ega?",
        "options": [
            {
                "option_text": "Bitta",
                "is_correct": false
            },
            {
                "option_text": "Ikkita",
                "is_correct": true
            },
            {
                "option_text": "Uchtadan",
                "is_correct": false
            },
            {
                "option_text": "To‘rttadan",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Bir bog‘lamli ro‘yxatdan elementni o‘chirish algoritmi qanday ishlaydi?",
        "options": [
            {
                "option_text": "Element topiladi va o‘chiriladi, keyin ro‘yxat qayta bog‘lanadi",
                "is_correct": true
            },
            {
                "option_text": "Element o‘chirilib, boshqa elementlar o‘rin almashadi",
                "is_correct": false
            },
            {
                "option_text": "Barcha elementlar o‘chiriladi",
                "is_correct": false
            },
            {
                "option_text": "Elementni o‘chirish mumkin emas",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Ikki bog‘lamli ro‘yxatda yangi tugunni qo‘shish uchun nechta bog‘lanishni o‘zgartirish kerak?",
        "options": [
            {
                "option_text": "Bitta",
                "is_correct": false
            },
            {
                "option_text": "Ikkita",
                "is_correct": true
            },
            {
                "option_text": "Uchtadan",
                "is_correct": false
            },
            {
                "option_text": "To‘rttadan",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Bir bog‘lamli ro‘yxatning oxiriga element qo‘shish uchun qanday amallar bajariladi?",
        "options": [
            {
                "option_text": "Ro‘yxat boshiga yangi element qo‘shiladi",
                "is_correct": false
            },
            {
                "option_text": "So‘nggi elementga bog‘lanish ko‘rsatiladi va yangi element oxiriga qo‘shiladi",
                "is_correct": true
            },
            {
                "option_text": "Ro‘yxat butunlay o‘zgartiriladi",
                "is_correct": false
            },
            {
                "option_text": "Bir bog‘lamli ro‘yxatda element qo‘shib bo‘lmaydi",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Ikki bog‘lamli ro‘yxatda elementni o‘chirish jarayoni qanday amalga oshiriladi?",
        "options": [
            {
                "option_text": "Faqat oldingi element bilan bog‘lanish o‘zgartiriladi",
                "is_correct": false
            },
            {
                "option_text": "Faqat keyingi element bilan bog‘lanish o‘zgartiriladi",
                "is_correct": false
            },
            {
                "option_text": "Har ikkala bog‘lanish o‘zgartiriladi va element o‘chiriladi",
                "is_correct": true
            },
            {
                "option_text": "Elementni o‘chirish uchun bog‘lanishlarni o‘zgartirish shart emas",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Bir bog‘lamli ro‘yxatning dastlabki elementiga murojaat qilish algoritmi qanday?",
        "options": [
            {
                "option_text": "Ro‘yxat oxiridan boshlanadi",
                "is_correct": false
            },
            {
                "option_text": "Ro‘yxatning boshiga bevosita murojaat qilinadi",
                "is_correct": true
            },
            {
                "option_text": "Ro‘yxatdagi elementlar o‘rin almashadi",
                "is_correct": false
            },
            {
                "option_text": "Har bir element tekshiriladi",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Ikki bog‘lamli ro‘yxatni aylanma ro‘yxatga aylantirish uchun nima qilish kerak?",
        "options": [
            {
                "option_text": "Ro‘yxatning oxirgi elementini boshiga bog‘lash kerak",
                "is_correct": true
            },
            {
                "option_text": "Ro‘yxatni teskari aylantirish kerak",
                "is_correct": false
            },
            {
                "option_text": "Har bir elementni qo‘lda o‘zgartirish kerak",
                "is_correct": false
            },
            {
                "option_text": "Ro‘yxatdagi bog‘lanishlarni o‘zgartirish mumkin emas",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Bir bog‘lamli ro‘yxatdan elementni qidirish algoritmi qanday ishlaydi?",
        "options": [
            {
                "option_text": "Ro‘yxat boshidan oxirigacha bo‘lgan elementlar tekshiriladi",
                "is_correct": true
            },
            {
                "option_text": "Ro‘yxatdagi har bir element indeks bo‘yicha tekshiriladi",
                "is_correct": false
            },
            {
                "option_text": "Faqat ro‘yxat oxiri tekshiriladi",
                "is_correct": false
            },
            {
                "option_text": "Element avtomatik ravishda topiladi",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Ikki bog‘lamli ro‘yxatning afzalligi nimada?",
        "options": [
            {
                "option_text": "U ko‘proq xotira talab qiladi",
                "is_correct": true
            },
            {
                "option_text": "Elementlarga tezroq murojaat qilish mumkin",
                "is_correct": false
            },
            {
                "option_text": "Har bir element faqat keyingi elementga bog‘langan",
                "is_correct": false
            },
            {
                "option_text": "Ro‘yxat o‘zgarmas bo‘lib qoladi",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Bir bog‘lamli ro‘yxatni aylantirib, ro‘yxat oxiridan boshiga elementlarni keltirish algoritmi nima?",
        "options": [
            {
                "option_text": "Ro‘yxatdagi barcha elementlar o‘chirilib, yangilari qo‘shiladi",
                "is_correct": false
            },
            {
                "option_text": "Ro‘yxatdagi bog‘lanishlar o‘zgartiriladi",
                "is_correct": true
            },
            {
                "option_text": "Ro‘yxatdagi elementlar birma-bir tekshiriladi",
                "is_correct": false
            },
            {
                "option_text": "Ro‘yxatni aylantirish mumkin emas",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Ikki bog‘lamli ro‘yxatda elementlarni teskari tartibda ko‘rsatish algoritmi qanday?",
        "options": [
            {
                "option_text": "Ro‘yxat boshidan oxirigacha bo‘lgan elementlar tekshiriladi",
                "is_correct": false
            },
            {
                "option_text": "Oxirgi elementdan boshlab, har bir elementga murojaat qilinadi",
                "is_correct": true
            },
            {
                "option_text": "Elementlar indekslari o‘zgartiriladi",
                "is_correct": false
            },
            {
                "option_text": "Ro‘yxatni teskari aylantirish mumkin emas",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Bir bog‘lamli ro‘yxatda oxirgi elementga qanday murojaat qilinadi?",
        "options": [
            {
                "option_text": "Bosh element orqali hamma elementlar ko‘rib chiqiladi",
                "is_correct": true
            },
            {
                "option_text": "Ro‘yxatning boshiga murojaat qilinadi",
                "is_correct": false
            },
            {
                "option_text": "To‘g‘ridan-to‘g‘ri oxirgi elementga murojaat qilinadi",
                "is_correct": false
            },
            {
                "option_text": "Ro‘yxatdagi elementlarni o‘zgartirish kerak",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Ikki bog‘lamli ro‘yxatda elementlarni indeks bo‘yicha qidirish qanday amalga oshiriladi?",
        "options": [
            {
                "option_text": "Har bir element tekshiriladi",
                "is_correct": true
            },
            {
                "option_text": "Faqat indeks bo‘yicha to‘g‘ridan-to‘g‘ri qidiriladi",
                "is_correct": false
            },
            {
                "option_text": "Ro‘yxatni to‘liq o‘zgartirish kerak",
                "is_correct": false
            },
            {
                "option_text": "Indeks bo‘yicha qidirish mumkin emas",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Bir bog‘lamli ro‘yxatdagi elementlarni teskari tartibga solish qanday amalga oshiriladi?",
        "options": [
            {
                "option_text": "Har bir elementning bog‘lanishi o‘zgartiriladi",
                "is_correct": true
            },
            {
                "option_text": "Har bir element o‘chiriladi va qayta qo‘shiladi",
                "is_correct": false
            },
            {
                "option_text": "Ro‘yxat boshidan oxirigacha bo‘lgan elementlar almashtiriladi",
                "is_correct": false
            },
            {
                "option_text": "Teskari tartibga solib bo‘lmaydi",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Stekda element qo‘shish operatsiyasi qanday nomlanadi?",
        "options": [
            {
                "option_text": "Enqueue",
                "is_correct": false
            },
            {
                "option_text": "Push",
                "is_correct": true
            },
            {
                "option_text": "Pop",
                "is_correct": false
            },
            {
                "option_text": "Insert",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Stekda elementni o‘chirish operatsiyasi qanday nomlanadi?",
        "options": [
            {
                "option_text": "Dequeue",
                "is_correct": false
            },
            {
                "option_text": "Remove",
                "is_correct": false
            },
            {
                "option_text": "Pop",
                "is_correct": true
            },
            {
                "option_text": "Shift",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Navbatda element qo‘shish operatsiyasi qanday nomlanadi?",
        "options": [
            {
                "option_text": "Push",
                "is_correct": false
            },
            {
                "option_text": "Pop",
                "is_correct": false
            },
            {
                "option_text": "Enqueue",
                "is_correct": true
            },
            {
                "option_text": "Insert",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Navbatda elementni o‘chirish operatsiyasi qanday amalga oshiriladi?",
        "options": [
            {
                "option_text": "Push",
                "is_correct": false
            },
            {
                "option_text": "Dequeue",
                "is_correct": true
            },
            {
                "option_text": "Remove",
                "is_correct": false
            },
            {
                "option_text": "Pop",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Stekda elementlar qanday tartibda o‘chiriladi?",
        "options": [
            {
                "option_text": "Birinchi qo‘shilgan birinchi o‘chiriladi (FIFO)",
                "is_correct": false
            },
            {
                "option_text": "Oxirgi qo‘shilgan birinchi o‘chiriladi (LIFO)",
                "is_correct": true
            },
            {
                "option_text": "O‘rtadagi element o‘chiriladi",
                "is_correct": false
            },
            {
                "option_text": "Elementlarni o‘chirish tartibi yo‘q",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Navbatda elementlar qanday tartibda o‘chiriladi?",
        "options": [
            {
                "option_text": "Birinchi qo‘shilgan birinchi o‘chiriladi (FIFO)",
                "is_correct": true
            },
            {
                "option_text": "Oxirgi qo‘shilgan birinchi o‘chiriladi (LIFO)",
                "is_correct": false
            },
            {
                "option_text": "Elementlarni tasodifiy tartibda o‘chirish mumkin",
                "is_correct": false
            },
            {
                "option_text": "O‘chirish faqat oxiridan amalga oshiriladi",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Dekda elementlarni qo‘shish qayerdan amalga oshiriladi?",
        "options": [
            {
                "option_text": "Faqat boshidan",
                "is_correct": false
            },
            {
                "option_text": "Faqat oxiridan",
                "is_correct": false
            },
            {
                "option_text": "Boshidan va oxiridan ham",
                "is_correct": true
            },
            {
                "option_text": "Faqat o‘rtasidan",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Dekda elementlarni o‘chirish qayerdan amalga oshiriladi?",
        "options": [
            {
                "option_text": "Faqat boshidan",
                "is_correct": false
            },
            {
                "option_text": "Faqat oxiridan",
                "is_correct": false
            },
            {
                "option_text": "Boshidan va oxiridan ham",
                "is_correct": true
            },
            {
                "option_text": "Har qanday joydan",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Navbatda qaysi element birinchi o‘chiriladi?",
        "options": [
            {
                "option_text": "Birinchi qo‘shilgan element",
                "is_correct": true
            },
            {
                "option_text": "Oxirgi qo‘shilgan element",
                "is_correct": false
            },
            {
                "option_text": "O‘rtadagi element",
                "is_correct": false
            },
            {
                "option_text": "Tasodifiy element",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Stekning asosiy xususiyati nima?",
        "options": [
            {
                "option_text": "Birinchi kelgan birinchi ketadi",
                "is_correct": false
            },
            {
                "option_text": "Oxirgi kelgan birinchi ketadi",
                "is_correct": true
            },
            {
                "option_text": "Elementlar indekslanadi",
                "is_correct": false
            },
            {
                "option_text": "Elementlar avtomatik saralanadi",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Dekning asosiy xususiyati nima?",
        "options": [
            {
                "option_text": "Har ikki tomondan ham elementlar qo‘shilib, o‘chirilishi mumkin",
                "is_correct": true
            },
            {
                "option_text": "Faqat boshidan elementlar o‘chiriladi",
                "is_correct": false
            },
            {
                "option_text": "Faqat oxiridan elementlar qo‘shiladi",
                "is_correct": false
            },
            {
                "option_text": "Faqat o‘rtadagi elementlar o‘chiriladi",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Stek qanday ma'lumot tuzilmasiga kiradi?",
        "options": [
            {
                "option_text": "Chiziqli",
                "is_correct": true
            },
            {
                "option_text": "Noto‘g‘ri",
                "is_correct": false
            },
            {
                "option_text": "Ierarxik",
                "is_correct": false
            },
            {
                "option_text": "Graflar",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Navbatdan foydalanishning amaliy qo‘llanilishi nimada?",
        "options": [
            {
                "option_text": "Funksiya chaqiruvlarini qayta ishlash",
                "is_correct": false
            },
            {
                "option_text": "Ma'lumotlarni qatorlash",
                "is_correct": false
            },
            {
                "option_text": "Jarayonlarni birin-ketin bajarish",
                "is_correct": true
            },
            {
                "option_text": "Xotira boshqaruvi",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Dekning afzalligi nimada?",
        "options": [
            {
                "option_text": "Uni faqat ma'lum bir turdagi ma'lumotlar uchun ishlatish mumkin",
                "is_correct": false
            },
            {
                "option_text": "Uni faqat stek sifatida ishlatish mumkin",
                "is_correct": false
            },
            {
                "option_text": "Uni stek va navbat sifatida ishlatish mumkin",
                "is_correct": true
            },
            {
                "option_text": "Uni faqat ierarxik ma'lumotlar uchun ishlatish mumkin",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Stekda yuqori elementga qanday murojaat qilinadi?",
        "options": [
            {
                "option_text": "Index orqali",
                "is_correct": false
            },
            {
                "option_text": "Top funksiyasi orqali",
                "is_correct": true
            },
            {
                "option_text": "Enqueue funksiyasi orqali",
                "is_correct": false
            },
            {
                "option_text": "Dequeue funksiyasi orqali",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Ustivor navbatning asosiy farqi nimada? ",
        "options": [
            {
                "option_text": "Faqat oxirgi qo‘shilgan element birinchi bo‘lib chiqariladi",
                "is_correct": false
            },
            {
                "option_text": "Har bir elementning ustivorligi bo‘yicha chiqariladi",
                "is_correct": true
            },
            {
                "option_text": "Elementlar tasodifiy tartibda chiqariladi",
                "is_correct": false
            },
            {
                "option_text": "Faqat eng katta qiymatdagi element chiqariladi",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Lug‘at qanday ma'lumot tuzilmasi hisoblanadi?",
        "options": [
            {
                "option_text": "Ma'lumotlar indekslanadi va tartiblanadi",
                "is_correct": false
            },
            {
                "option_text": "Kalit-qiymat juftligi shaklida saqlanadi",
                "is_correct": true
            },
            {
                "option_text": "Ma'lumotlar faqat ro‘yxatda saqlanadi",
                "is_correct": false
            },
            {
                "option_text": "Faqat sonli ma'lumotlar saqlanadi",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Ustivor navbatdan foydalanish qachon ma'qul?",
        "options": [
            {
                "option_text": "Ma'lumotlar ketma-ket tartibda ishlanayotganda",
                "is_correct": false
            },
            {
                "option_text": "Eng muhim elementlarni tezda ajratish zarur bo‘lganda",
                "is_correct": true
            },
            {
                "option_text": "Faqat ma'lumotlarni qayta yozish zarur bo‘lganda",
                "is_correct": false
            },
            {
                "option_text": "Ma'lumotlarni qo‘shish va o‘chirish talab etilmaganda",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Lug‘atda kalitlar qanday bo‘lishi mumkin?",
        "options": [
            {
                "option_text": "Faqat raqamlar",
                "is_correct": false
            },
            {
                "option_text": "Faqat satrlar",
                "is_correct": false
            },
            {
                "option_text": "Faqat oddiy turdagi ma'lumotlar",
                "is_correct": false
            },
            {
                "option_text": "Har qanday o‘zgarmas ma'lumot turi",
                "is_correct": true
            }
        ]
    },
    {
        "question_text": "Stekda elementni chiqarish operatsiyasi qanday amalga oshiriladi?",
        "options": [
            {
                "option_text": "Faqat pastki element chiqariladi",
                "is_correct": false
            },
            {
                "option_text": "Yuqori element chiqariladi",
                "is_correct": true
            },
            {
                "option_text": "Tasodifiy element chiqariladi",
                "is_correct": false
            },
            {
                "option_text": "Barcha elementlar birdaniga chiqariladi",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Ustivor navbatda elementlarni qo‘shish qaysi tartibda amalga oshiriladi?",
        "options": [
            {
                "option_text": "Qo‘shilish paytida ustivorlik belgilanadi",
                "is_correct": true
            },
            {
                "option_text": "Birinchi kelgan element birinchi chiqariladi",
                "is_correct": false
            },
            {
                "option_text": "Faqat yuqori ustivorlikdagi elementlar qo‘shiladi",
                "is_correct": false
            },
            {
                "option_text": "Elementlar avtomatik ravishda ustivor tartibda saqlanadi",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Navbatda elementni qaysi operatsiya bilan chiqariladi?",
        "options": [
            {
                "option_text": "Push",
                "is_correct": false
            },
            {
                "option_text": "Pop",
                "is_correct": false
            },
            {
                "option_text": "Enqueue",
                "is_correct": false
            },
            {
                "option_text": "Dequeue",
                "is_correct": true
            }
        ]
    },
    {
        "question_text": "Lug‘atning afzalligi nimada?",
        "options": [
            {
                "option_text": "Kalitlar orqali ma'lumotlarga tezkor murojaat qilish mumkin",
                "is_correct": true
            },
            {
                "option_text": "Faqat sonli qiymatlar saqlanadi",
                "is_correct": false
            },
            {
                "option_text": "Kalitlar tartiblangan holda saqlanadi",
                "is_correct": false
            },
            {
                "option_text": "Faqat bitta element saqlanadi",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Dekdan foydalanish qanday amalga oshiriladi?",
        "options": [
            {
                "option_text": "Faqat elementlarni o‘chirish uchun",
                "is_correct": false
            },
            {
                "option_text": "Har ikki tomondan element qo‘shish va o‘chirish uchun",
                "is_correct": true
            },
            {
                "option_text": "Faqat stek sifatida",
                "is_correct": false
            },
            {
                "option_text": "Faqat navbat sifatida",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Lug‘atda mavjud kalitni qanday tekshirish mumkin?",
        "options": [
            {
                "option_text": "Tekshirish imkoni yo‘q",
                "is_correct": false
            },
            {
                "option_text": "'in' operatori orqali",
                "is_correct": true
            },
            {
                "option_text": "Faqat ro‘yxat orqali",
                "is_correct": false
            },
            {
                "option_text": "Faqat sonli kalitlar orqali",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Ustivor navbatda eng yuqori ustivorlikka ega elementni qanday chiqarish mumkin?",
        "options": [
            {
                "option_text": "Pop operatsiyasi orqali",
                "is_correct": false
            },
            {
                "option_text": "Dequeue operatsiyasi orqali",
                "is_correct": true
            },
            {
                "option_text": "Ustivorlik bo‘yicha eng yuqori elementni avtomatik tanlash orqali",
                "is_correct": false
            },
            {
                "option_text": "Faqat oxirgi element chiqariladi",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Lug‘atlarda qiymatlar qanday saqlanadi?",
        "options": [
            {
                "option_text": "Faqat satrlar sifatida",
                "is_correct": false
            },
            {
                "option_text": "Kalit-qiymat juftligi sifatida",
                "is_correct": true
            },
            {
                "option_text": "Faqat sonli qiymatlar sifatida",
                "is_correct": false
            },
            {
                "option_text": "Elementlar indekslanadi",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Navbatda elementlarni qanday tartibda chiqariladi?",
        "options": [
            {
                "option_text": "Birinchi qo‘shilgan birinchi chiqariladi (FIFO)",
                "is_correct": true
            },
            {
                "option_text": "Oxirgi qo‘shilgan birinchi chiqariladi (LIFO)",
                "is_correct": false
            },
            {
                "option_text": "Tasodifiy element chiqariladi",
                "is_correct": false
            },
            {
                "option_text": "Faqat yuqori ustivorlikdagi element chiqariladi",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Ustivor navbat va oddiy navbatning farqi nimada?",
        "options": [
            {
                "option_text": "Ustivor navbatda har bir elementning ustivorligi bo‘ladi",
                "is_correct": true
            },
            {
                "option_text": "Oddiy navbatda faqat oxiridan elementlar qo‘shiladi",
                "is_correct": false
            },
            {
                "option_text": "Ustivor navbat faqat stek sifatida ishlaydi",
                "is_correct": false
            },
            {
                "option_text": "Oddiy navbatda ustivorlik belgilanadi",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Dek qanday holatlarda qo‘llaniladi?",
        "options": [
            {
                "option_text": "Har ikki tomondan bir vaqtda qo‘shish va o‘chirish kerak bo‘lganda",
                "is_correct": true
            },
            {
                "option_text": "Faqat o‘chirish kerak bo‘lganda",
                "is_correct": false
            },
            {
                "option_text": "Faqat ma'lumotlarni o‘zgartirish kerak bo‘lganda",
                "is_correct": false
            },
            {
                "option_text": "Ma'lumotlar faqat bitta tomondan qo‘shilganda",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Daraxtsimon ma’lumotlar tuzilmasi nima?",
        "options": [
            {
                "option_text": "Barcha elementlar bir-biriga bog'langan bir chiziqli tuzilma",
                "is_correct": false
            },
            {
                "option_text": "Tugunlar va ularning o‘zaro bog'lanishlaridan tashkil topgan ma'lumotlar tuzilmasi",
                "is_correct": true
            },
            {
                "option_text": "Elementlar tasodifiy tartibda saqlanadigan tuzilma",
                "is_correct": false
            },
            {
                "option_text": "Faqat ikki elementni o‘z ichiga oladigan tuzilma",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Ikkilik daraxtda har bir tugun maksimal nechta farzandga ega bo‘lishi mumkin?",
        "options": [
            {
                "option_text": 1,
                "is_correct": false
            },
            {
                "option_text": 2,
                "is_correct": true
            },
            {
                "option_text": 3,
                "is_correct": false
            },
            {
                "option_text": "Cheksiz",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Ikkilik qidiruv daraxtining xususiyati nimada?",
        "options": [
            {
                "option_text": "Har bir tugun faqat bitta farzandga ega bo'ladi",
                "is_correct": false
            },
            {
                "option_text": "Har bir tugunning chap farzandi kichikroq, o‘ng farzandi kattaroq qiymatga ega bo‘ladi",
                "is_correct": true
            },
            {
                "option_text": "Tugunlarning qiymatlari tasodifiy tartiblangan",
                "is_correct": false
            },
            {
                "option_text": "Daraxt faqat teng qiymatli tugunlardan iborat",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Daraxt ko‘rishning qaysi turi “chap, ildiz, o‘ng” tartibini qo‘llaydi?",
        "options": [
            {
                "option_text": "Preorder",
                "is_correct": false
            },
            {
                "option_text": "Postorder",
                "is_correct": false
            },
            {
                "option_text": "Inorder",
                "is_correct": true
            },
            {
                "option_text": "Level-order",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Qaysi daraxt turlari muvozanatlangan daraxtlar hisoblanadi?",
        "options": [
            {
                "option_text": "Ikkilik qidiruv daraxti",
                "is_correct": false
            },
            {
                "option_text": "AVL daraxti",
                "is_correct": true
            },
            {
                "option_text": "Heaps",
                "is_correct": false
            },
            {
                "option_text": "Hammasi",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Heaps daraxtining asosiy xususiyati nimada?",
        "options": [
            {
                "option_text": "Har bir tugun ikkita farzandga ega bo‘lishi kerak",
                "is_correct": false
            },
            {
                "option_text": "Har bir tugun o‘zining barcha farzandlaridan katta yoki kichik bo'lishi kerak",
                "is_correct": true
            },
            {
                "option_text": "Daraxtda barcha elementlar teng",
                "is_correct": false
            },
            {
                "option_text": "Har bir tugun faqat bitta farzandga ega bo‘lishi kerak",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Daraxtda tugunlarning sathi nimani bildiradi?",
        "options": [
            {
                "option_text": "Daraxtning balandligini",
                "is_correct": false
            },
            {
                "option_text": "Tugunning ildizdan uzoqligini",
                "is_correct": true
            },
            {
                "option_text": "Daraxtning umumiy elementlar sonini",
                "is_correct": false
            },
            {
                "option_text": "Har bir tugunning qiymatini",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Daraxt balandligi qanday aniqlanadi?",
        "options": [
            {
                "option_text": "Daraxtdagi barcha tugunlar soni bilan",
                "is_correct": false
            },
            {
                "option_text": "Daraxtning chap tomoni bilan",
                "is_correct": false
            },
            {
                "option_text": "Daraxtning ildizidan eng uzoq tugungacha bo'lgan yo‘l uzunligi bilan",
                "is_correct": true
            },
            {
                "option_text": "Daraxtdagi barcha farzandlar soni bilan",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Ikkilik qidiruv daraxtiga yangi element qo‘shishda qaysi tamoyil qo‘llaniladi?",
        "options": [
            {
                "option_text": "Elementlarni har doim o‘ng tarafga qo‘shish kerak",
                "is_correct": false
            },
            {
                "option_text": "Yangi elementni faqat chap tarafga qo‘shish kerak",
                "is_correct": false
            },
            {
                "option_text": "Yangi elementni o‘rnatishda kichikroq elementlar chap tarafga, kattaroq elementlar o‘ng tarafga qo‘shiladi",
                "is_correct": true
            },
            {
                "option_text": "Elementlarni faqat ildizga qo‘shish kerak",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Daraxtda barg nima?",
        "options": [
            {
                "option_text": "Farzandi yo‘q bo'lgan tugun",
                "is_correct": true
            },
            {
                "option_text": "Ildizdan keyingi tugun",
                "is_correct": false
            },
            {
                "option_text": "Eng katta qiymatli tugun",
                "is_correct": false
            },
            {
                "option_text": "Faqat bitta farzandi bo'lgan tugun",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "AVL daraxti nima uchun muvozanatlangan hisoblanadi?",
        "options": [
            {
                "option_text": "Daraxtda barcha tugunlar teng",
                "is_correct": false
            },
            {
                "option_text": "Har bir tugunning chap va o‘ng bo‘limlarining balandliklari farqi 1 dan oshmaydi",
                "is_correct": true
            },
            {
                "option_text": "Daraxtdagi barcha elementlar teng qiymatli",
                "is_correct": false
            },
            {
                "option_text": "Daraxtning barcha satrlari bir xil bo‘ladi",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Daraxt ko‘rishda Level-order tartibi qanday ishlaydi?",
        "options": [
            {
                "option_text": "Daraxtni ildizdan boshlab qatlamma-qatlam ko‘rish",
                "is_correct": true
            },
            {
                "option_text": "Daraxtni chap tomondan o‘ng tomonga ko‘rish",
                "is_correct": false
            },
            {
                "option_text": "Har bir tugunni farzandlari bilan ko‘rish",
                "is_correct": false
            },
            {
                "option_text": "Daraxtni faqat barglardan boshlab ko‘rish",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Qaysi daraxtda har bir tugunning chap va o‘ng bo‘limlari farqi saqlanadi?",
        "options": [
            {
                "option_text": "Ikkilik qidiruv daraxti",
                "is_correct": false
            },
            {
                "option_text": "AVL daraxti",
                "is_correct": true
            },
            {
                "option_text": "Heaps daraxti",
                "is_correct": false
            },
            {
                "option_text": "Hammasi",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Daraxt ildizi nima?",
        "options": [
            {
                "option_text": "Daraxtning eng pastki tuguni",
                "is_correct": false
            },
            {
                "option_text": "Daraxtning eng yuqori tuguni",
                "is_correct": true
            },
            {
                "option_text": "Daraxtning barcha tugunlari",
                "is_correct": false
            },
            {
                "option_text": "Daraxtning barcha barglari",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Daraxtlarda rekursiv travers qilish qanday amalga oshiriladi?",
        "options": [
            {
                "option_text": "Faqat ildiz orqali",
                "is_correct": false
            },
            {
                "option_text": "Har bir tugunni rekursiv tarzda ko‘rish",
                "is_correct": true
            },
            {
                "option_text": "Daraxtni ildizdan pastga qarab rekursiv tarzda ko‘rish",
                "is_correct": false
            },
            {
                "option_text": "Daraxtni chapdan o‘ngga qarab rekursiv tarzda ko‘rish",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Binar qidiruv daraxti nima?",
        "options": [
            {
                "option_text": "Daraxt ko'rinishidagi ma'lumotlar tuzilmasi, unda har bir tugun maksimal ikkita bolaga ega",
                "is_correct": false
            },
            {
                "option_text": "Ma'lumotlar daraxti bo'lib, har bir tugunda chap tomondagi tugun kichik, o'ng tomondagi tugun katta bo'ladi",
                "is_correct": true
            },
            {
                "option_text": "Hech qanday bog'liqlik yo'q",
                "is_correct": false
            },
            {
                "option_text": "Daraxt ko'rinishidagi ma'lumotlar tuzilmasi, unda har bir tugun maksimal ikkita bargga ega",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Binar qidiruv daraxtida element qidirish jarayonida nimalar muhim?",
        "options": [
            {
                "option_text": "Tugun qiymatlari chap tomonda kichik, o'ng tomonda katta ekanligini bilish",
                "is_correct": true
            },
            {
                "option_text": "Har bir tugunning ikkita ota bo'lishi",
                "is_correct": false
            },
            {
                "option_text": "Har bir tugunning faqat bitta bola bo'lishi",
                "is_correct": false
            },
            {
                "option_text": "Tugun qiymatlari teng bo’lishi",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Binar qidiruv daraxtini qanday qilib yaratish mumkin?",
        "options": [
            {
                "option_text": "Tugunlarni ketma-ket bir-biriga ulash orqali",
                "is_correct": false
            },
            {
                "option_text": "Har bir yangi qiymatni to'g'ri joyga joylashtirib, chapdan o'ngga tartibga solish orqali",
                "is_correct": true
            },
            {
                "option_text": "Tugunlarni tasodifiy joylashtirish orqali",
                "is_correct": false
            },
            {
                "option_text": "Ro’yxatlar saralash orqali",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Binar qidiruv daraxtining qaysi xossasi uni qidirishda tezkor qiladi?",
        "options": [
            {
                "option_text": "O‘ng tomondagi tugunlar qiymati kichik, chap tomondagi tugunlar qiymati katta",
                "is_correct": false
            },
            {
                "option_text": "Barcha tugunlar bir xil qiymatga ega",
                "is_correct": false
            },
            {
                "option_text": "Tugunlar soni juft bo'lishi",
                "is_correct": false
            },
            {
                "option_text": "Chap tomondagi tugunlar qiymati kichik, o'ng tomondagi tugunlar qiymati katta",
                "is_correct": true
            }
        ]
    },
    {
        "question_text": "Binar qidiruv daraxtida yangi tugun qo'shish qaysi tartibda bajariladi?",
        "options": [
            {
                "option_text": "Qaysi joy bo'sh bo'lsa, o'sha yerga qo'shiladi",
                "is_correct": false
            },
            {
                "option_text": "Daraxtning ildizidan boshlab, qaysi yo'nalishda joylashishi kerakligini aniqlab qo'shiladi",
                "is_correct": true
            },
            {
                "option_text": "Tugunlar o'rtacha qiymati bo'yicha joylashtiriladi",
                "is_correct": false
            },
            {
                "option_text": "Barcha barglari qiymati qo’shiladi",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "BST da minimal qiymatni qanday topish mumkin?",
        "options": [
            {
                "option_text": "Ildiz tugundan boshlab chapga harakat qilib, oxirgi tugun",
                "is_correct": true
            },
            {
                "option_text": "Ildiz tugundan boshlab o'ngga harakat qilib, oxirgi tugun",
                "is_correct": false
            },
            {
                "option_text": "Daraxtning istalgan tugunida",
                "is_correct": false
            },
            {
                "option_text": "Daraxt ildiz tugunida",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "BSTda qidiruv murakkabligi eng yomon holatda qanday bo'ladi?",
        "options": [
            {
                "option_text": "O(n)",
                "is_correct": true
            },
            {
                "option_text": "O(log n)",
                "is_correct": false
            },
            {
                "option_text": "O(1)",
                "is_correct": false
            },
            {
                "option_text": "O(n2)",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Binar qidiruv daraxtini muvozanatlash nima uchun kerak?",
        "options": [
            {
                "option_text": "Tez hisoblash uchun",
                "is_correct": false
            },
            {
                "option_text": "Har bir tugunni o'z joyida saqlash uchun",
                "is_correct": false
            },
            {
                "option_text": "Daraxt hajmini kamaytirish uchun",
                "is_correct": false
            },
            {
                "option_text": "Qidiruv vaqtini qisqartirish uchun",
                "is_correct": true
            }
        ]
    },
    {
        "question_text": "BST-da qaysi jarayon foydalanilmagan qiymatlarni olib tashlash uchun ishlatiladi?",
        "options": [
            {
                "option_text": "O'chirish",
                "is_correct": false
            },
            {
                "option_text": "O'chirish va qayta tashkil etish",
                "is_correct": true
            },
            {
                "option_text": "Qayta qidirish",
                "is_correct": false
            },
            {
                "option_text": "Yangilash",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "BSTning ildiz tugunini nima deb atash mumkin?",
        "options": [
            {
                "option_text": "Daraxtning boshlang'ich nuqtasi",
                "is_correct": true
            },
            {
                "option_text": "Daraxtning oxirgi nuqtasi",
                "is_correct": false
            },
            {
                "option_text": "Tugunlarning yig'indisi",
                "is_correct": false
            },
            {
                "option_text": "Barglari yig’indisiga",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "BSTda elementlarni qo'shishda qanday algoritmdan foydalaniladi?",
        "options": [
            {
                "option_text": "Ildiz tugunga qo’shni tunlar qo’shiladi",
                "is_correct": false
            },
            {
                "option_text": "Har bir tugunga almashtirish orqali qo'shiladi",
                "is_correct": false
            },
            {
                "option_text": "Eng pastki o'ng tugunga qo'shiladi",
                "is_correct": false
            },
            {
                "option_text": "Qo'shilayotgan elementni ildizdan boshlanib, tegishli joyga joylashtiriladi",
                "is_correct": true
            }
        ]
    },
    {
        "question_text": "BSTda qiymatlarni tartiblangan holda chiqarish uchun qanday o'tish kerak?",
        "options": [
            {
                "option_text": "Preorder",
                "is_correct": false
            },
            {
                "option_text": "Inorder",
                "is_correct": true
            },
            {
                "option_text": "Postorder",
                "is_correct": false
            },
            {
                "option_text": "Prepostorder",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Binar qidiruv daraxtining maksimal chuqurligi qanday aniqlanadi?",
        "options": [
            {
                "option_text": "Daraxtning eng uzun yo'li bilan",
                "is_correct": true
            },
            {
                "option_text": "Daraxtning ildizidan qaysi tomonga qarash bilan",
                "is_correct": false
            },
            {
                "option_text": "Daraxtdagi barcha tugunlar soni bo'yicha",
                "is_correct": false
            },
            {
                "option_text": "Daraxtning eng qisqa yo’li bilan",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "BSTning qanday turlari mavjud?",
        "options": [
            {
                "option_text": "AVL, Red-Black, Splay",
                "is_correct": true
            },
            {
                "option_text": "Tarmoq, Grafik, Skameyka",
                "is_correct": false
            },
            {
                "option_text": "Lineer, Ikkilik, Tasodifiy",
                "is_correct": false
            },
            {
                "option_text": "Tarmoq, Splay, Tasodifiy",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "BSTda qiymatlarni tartibga solishda qanday xatti-harakat bo'ladi?",
        "options": [
            {
                "option_text": "Ildiz tugundan barg tugunga qadar tartiblanadi",
                "is_correct": false
            },
            {
                "option_text": "Har bir qiymat tasodifiy o'rinlarda joylashadi",
                "is_correct": false
            },
            {
                "option_text": "Chapdan o'ngga, eng kichikdan eng kattaga qadar tartiblanadi",
                "is_correct": true
            },
            {
                "option_text": "O'ngdan chapga qarab tartiblanadi",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Heap daraxti nima?",
        "options": [
            {
                "option_text": "Har bir ota tugun o‘z avlodlariga nisbatan ustunlikni saqlaydigan ikkilik daraxt",
                "is_correct": true
            },
            {
                "option_text": "Faqat to‘g‘ri bog‘langan daraxt",
                "is_correct": false
            },
            {
                "option_text": "Faqat qirralar orqali bir-biriga bog‘langan tugunlar",
                "is_correct": false
            },
            {
                "option_text": "Qirralarsiz daraxt",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Max-heap daraxti qanday xususiyatga ega?",
        "options": [
            {
                "option_text": "Har bir ota tugun o‘z avlodlaridan katta",
                "is_correct": true
            },
            {
                "option_text": "Har bir avlod tugun ota tugundan katta",
                "is_correct": false
            },
            {
                "option_text": "Barcha tugunlar bir xil qiymatda",
                "is_correct": false
            },
            {
                "option_text": "Tugunlarning qiymatlari tasodifiy",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Min-heap daraxtida qaysi xususiyat mavjud?",
        "options": [
            {
                "option_text": "Har bir ota tugun o‘z avlodlaridan kichik",
                "is_correct": true
            },
            {
                "option_text": "Har bir avlod tugun ota tugundan kichik",
                "is_correct": false
            },
            {
                "option_text": "Tugunlar teng qiymatda",
                "is_correct": false
            },
            {
                "option_text": "Daraxtda sikllar mavjud",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Heap daraxtida yangi tugun qanday qo‘shiladi?",
        "options": [
            {
                "option_text": "Daraxtning eng oxirgi bo‘sh joyiga",
                "is_correct": true
            },
            {
                "option_text": "Daraxtning ildiziga",
                "is_correct": false
            },
            {
                "option_text": "Har qanday joyga",
                "is_correct": false
            },
            {
                "option_text": "Faqat minimal qiymatli tugunlarga",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Heapify operatsiyasi nimani anglatadi?",
        "options": [
            {
                "option_text": "Daraxtni qayta tartibga solish",
                "is_correct": true
            },
            {
                "option_text": "Daraxtga yangi tugun qo‘shish",
                "is_correct": false
            },
            {
                "option_text": "Daraxtdan tugun o‘chirish",
                "is_correct": false
            },
            {
                "option_text": "Daraxtni kengaytirish",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Max-heap va Min-heap o‘rtasidagi asosiy farq nimada?",
        "options": [
            {
                "option_text": "Max-heapda ota tugun avlodlaridan katta, Min-heapda esa kichik",
                "is_correct": true
            },
            {
                "option_text": "Max-heapda faqat chap tomonda tugunlar bor",
                "is_correct": false
            },
            {
                "option_text": "Min-heapda qirralar yo‘q",
                "is_correct": false
            },
            {
                "option_text": "Max-heapda faqat sikllar mavjud",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Heap daraxtida eng katta yoki eng kichik qiymatni qanday olish mumkin?",
        "options": [
            {
                "option_text": "Ildiz tugunni olib tashlab, oxirgi tugunni ildizga joylashtirish va heapify qilish",
                "is_correct": true
            },
            {
                "option_text": "Har qanday tugunni olib tashlash orqali",
                "is_correct": false
            },
            {
                "option_text": "Faqat barg tugunlarni olib tashlash orqali",
                "is_correct": false
            },
            {
                "option_text": "Faqat chap tugunlarni olib tashlash orqali",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Heapsort algoritmi qanday ishlaydi?",
        "options": [
            {
                "option_text": "Daraxtni heapify qilib, eng katta yoki eng kichik qiymatni chiqarib tashlash orqali",
                "is_correct": true
            },
            {
                "option_text": "Daraxtning chap va o‘ng qismlarini tartibga solish orqali",
                "is_correct": false
            },
            {
                "option_text": "Daraxtdagi barcha qiymatlarni tenglashtirish orqali",
                "is_correct": false
            },
            {
                "option_text": "Har bir tugunni teskari tartibda qayta joylashtirish orqali",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Heap daraxtida eng katta qiymat qayerda bo‘ladi?",
        "options": [
            {
                "option_text": "Ildiz tugunida",
                "is_correct": true
            },
            {
                "option_text": "Chap tomonda",
                "is_correct": false
            },
            {
                "option_text": "O‘ng tomonda",
                "is_correct": false
            },
            {
                "option_text": "Har bir bo‘sh joyda",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Heap daraxtida eng kichik qiymat qayerda joylashgan bo‘ladi (min-heap)?",
        "options": [
            {
                "option_text": "Ildiz tugunida",
                "is_correct": true
            },
            {
                "option_text": "Chapdagi birinchi tugunda",
                "is_correct": false
            },
            {
                "option_text": "Eng so‘nggi tugunda",
                "is_correct": false
            },
            {
                "option_text": "Faqat chap tomonda",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Heap daraxtidagi tugunlarni qo‘shishning murakkabligi qanday?",
        "options": [
            {
                "option_text": "O(log n)",
                "is_correct": true
            },
            {
                "option_text": "O(n)",
                "is_correct": false
            },
            {
                "option_text": "O(n^2)",
                "is_correct": false
            },
            {
                "option_text": "O(1)",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Heap daraxtining eng yuqori darajasi qaysi bo‘ladi?",
        "options": [
            {
                "option_text": "Daraxtning ildiz tuguni",
                "is_correct": true
            },
            {
                "option_text": "Daraxtning chap tomoni",
                "is_correct": false
            },
            {
                "option_text": "Daraxtning o‘ng tomoni",
                "is_correct": false
            },
            {
                "option_text": "Daraxtdagi eng oxirgi tugun",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Heap daraxtida eng past darajadagi tugunlar qanday joylashadi?",
        "options": [
            {
                "option_text": "Daraxtning oxirgi qavatida",
                "is_correct": true
            },
            {
                "option_text": "Daraxtning ildizida",
                "is_correct": false
            },
            {
                "option_text": "Chap tomonda",
                "is_correct": false
            },
            {
                "option_text": "Faqat minimal qiymatli tugunlar",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Heap daraxti qaysi turdagi algoritmda samarali ishlatiladi?",
        "options": [
            {
                "option_text": "Heapsort",
                "is_correct": true
            },
            {
                "option_text": "Bubble Sort",
                "is_correct": false
            },
            {
                "option_text": "QuickSort",
                "is_correct": false
            },
            {
                "option_text": "Linear Search",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Heapsort algoritmi qaysi jarayon orqali bajariladi?",
        "options": [
            {
                "option_text": "Tugunlarni heapify qilish va ildizdan eng katta yoki eng kichik tugunni olib tashlash",
                "is_correct": true
            },
            {
                "option_text": "Har bir tugunni chap va o‘ngga almashtirish",
                "is_correct": false
            },
            {
                "option_text": "Daraxtni to‘liq qayta tuzish",
                "is_correct": false
            },
            {
                "option_text": "Daraxtning barcha tugunlarini tenglashtirish",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Grafning qo‘shma matritsa ko‘rinishi nima?",
        "options": [
            {
                "option_text": "Tugunlar orasidagi bog‘lanishlarni ifodalovchi kvadrat matritsa",
                "is_correct": true
            },
            {
                "option_text": "Tugunlar va qirralarni ro‘yxat sifatida tasvirlovchi matritsa",
                "is_correct": false
            },
            {
                "option_text": "Faqat qirralarni saqlovchi struktura",
                "is_correct": false
            },
            {
                "option_text": "Faqat yo‘llarni ko‘rsatuvchi tasvir",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Qo‘shma matritsa qanday ko‘rinishga ega bo‘ladi?",
        "options": [
            {
                "option_text": "To‘g‘ri bo‘lmagan matritsa",
                "is_correct": false
            },
            {
                "option_text": "Kvadrat matritsa, ularning elementlari 0 va 1",
                "is_correct": true
            },
            {
                "option_text": "Chiziqli ro‘yxat",
                "is_correct": false
            },
            {
                "option_text": "Tugunlar o‘rtasidagi masofalarni ko‘rsatadigan matritsa",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Qo‘shnilik ro‘yhati graflarni qanday tasvirlaydi?",
        "options": [
            {
                "option_text": "Matritsa orqali bog‘lanishlarni ko‘rsatadi",
                "is_correct": false
            },
            {
                "option_text": "Har bir tugun uchun uzunlik ro‘yxati",
                "is_correct": false
            },
            {
                "option_text": "Har bir tugun uchun bog‘liq tugunlarning ro‘yxati",
                "is_correct": true
            },
            {
                "option_text": "Tugun va qirralar o‘rtasidagi masofa",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Munosabatlar matritsasining asosiy xususiyati nima?",
        "options": [
            {
                "option_text": "Faqat qo‘shni tugunlarni ko‘rsatadi",
                "is_correct": false
            },
            {
                "option_text": "Faqat minimal yo‘llarni saqlaydi",
                "is_correct": false
            },
            {
                "option_text": "Grafdagi barcha qirralarni saqlaydi",
                "is_correct": false
            },
            {
                "option_text": "Har bir bog‘lanish uchun qiymatni 0 yoki 1 bilan ifodalaydi",
                "is_correct": true
            }
        ]
    },
    {
        "question_text": "Qo‘shma matritsada nollar nimani bildiradi?",
        "options": [
            {
                "option_text": "Tugunlar o‘rtasida bog‘lanish borligini",
                "is_correct": false
            },
            {
                "option_text": "Tugunlar o‘rtasida bog‘lanish yo‘qligini",
                "is_correct": true
            },
            {
                "option_text": "Tugunlar o‘rtasida masofa borligini",
                "is_correct": false
            },
            {
                "option_text": "Tugunlar o‘rtasidagi yo‘lni",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Qo‘shnilik ro‘yxatining afzalligi nimada?",
        "options": [
            {
                "option_text": "Kamroq joy talab qiladi",
                "is_correct": true
            },
            {
                "option_text": "Ko‘proq joy talab qiladi",
                "is_correct": false
            },
            {
                "option_text": "Tugunlar o‘rtasidagi masofani ko‘rsatadi",
                "is_correct": false
            },
            {
                "option_text": "Faqat minimal qirralarni saqlaydi",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Qaysi usul bog‘lanish mavjudligini tezroq aniqlaydi?",
        "options": [
            {
                "option_text": "Qo‘shnilik ro‘yhati",
                "is_correct": false
            },
            {
                "option_text": "Qo‘shma matritsa",
                "is_correct": true
            },
            {
                "option_text": "Yoylar ro‘yhati",
                "is_correct": false
            },
            {
                "option_text": "Munosabatlar matritsasi",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Qo‘shma matritsa qanday holatda samarali ishlaydi?",
        "options": [
            {
                "option_text": "Qirralar soni kam bo‘lganda",
                "is_correct": false
            },
            {
                "option_text": "Tugunlar soni kam bo‘lganda",
                "is_correct": false
            },
            {
                "option_text": "Qirralar soni ko‘p bo‘lganda",
                "is_correct": true
            },
            {
                "option_text": "Faqat sikllar bo‘lganda",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Yoylar ro‘yhati graflarni qanday tasvirlaydi?",
        "options": [
            {
                "option_text": "Tugunlarni chiziqli ro‘yxat sifatida saqlaydi",
                "is_correct": false
            },
            {
                "option_text": "Matritsa orqali bog‘lanishlarni ko‘rsatadi",
                "is_correct": false
            },
            {
                "option_text": "Har bir tugun uchun minimal yo‘llarni ko‘rsatadi",
                "is_correct": false
            },
            {
                "option_text": "Har bir qirra uchun bog‘lanishlarni ro‘yxat sifatida saqlaydi",
                "is_correct": true
            }
        ]
    },
    {
        "question_text": "Qo‘shma matritsaning kamchiligi nimada?",
        "options": [
            {
                "option_text": "Eng qisqa yo‘lni topish imkonini beradi",
                "is_correct": false
            },
            {
                "option_text": "Juda ko‘p xotira talab qiladi",
                "is_correct": true
            },
            {
                "option_text": "Kam joy talab qiladi",
                "is_correct": false
            },
            {
                "option_text": "Faqat sikllarni ko‘rsatadi",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Qo‘shnilik ro‘yxatining yomon tomoni nima?",
        "options": [
            {
                "option_text": "Tugunlar o‘rtasidagi bog‘lanishlarni tekshirish ko‘proq vaqt talab qiladi",
                "is_correct": true
            },
            {
                "option_text": "Juda ko‘p xotira talab qiladi",
                "is_correct": false
            },
            {
                "option_text": "Tugunlar o‘rtasidagi yo‘llarni aniqlab bo‘lmaydi",
                "is_correct": false
            },
            {
                "option_text": "Faqat sikllarni ko‘rsatadi",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Qo‘shma matritsa qanday bog‘lanishlarni ifodalaydi?",
        "options": [
            {
                "option_text": "Faqat minimal bog‘lanishlarni",
                "is_correct": false
            },
            {
                "option_text": "Faqat bog‘lanmagan tugunlarni",
                "is_correct": false
            },
            {
                "option_text": "Bog‘langan va bog‘lanmagan tugunlarni",
                "is_correct": true
            },
            {
                "option_text": "Faqat tugunlar o‘rtasidagi masofani",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Graflarni tasvirlashda qaysi usul kam joy talab qiladi?",
        "options": [
            {
                "option_text": "Qo‘shnilik ro‘yxati",
                "is_correct": true
            },
            {
                "option_text": "Qo‘shma matritsa",
                "is_correct": false
            },
            {
                "option_text": "Munosabatlar matritsasi",
                "is_correct": false
            },
            {
                "option_text": "Yoylar ro‘yhati",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Qo‘shnilik ro‘yxati qanday graf turlarida samarali ishlaydi?",
        "options": [
            {
                "option_text": "Zich graflar",
                "is_correct": false
            },
            {
                "option_text": "Siyrak graflar",
                "is_correct": true
            },
            {
                "option_text": "Tugunsiz graflar",
                "is_correct": false
            },
            {
                "option_text": "Sikllar mavjud bo‘lmagan graflar",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Yoylar ro‘yhati qaysi grafda samarali ishlaydi?",
        "options": [
            {
                "option_text": "Siyrak graflarda",
                "is_correct": true
            },
            {
                "option_text": "Zich graflarda",
                "is_correct": false
            },
            {
                "option_text": "Tugunlari ko‘p bo‘lgan graflarda",
                "is_correct": false
            },
            {
                "option_text": "Siklsiz graflarda",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Qaysi algoritm chuqurlik bo‘yicha ko‘ruv (DFS) uchun ishlatiladi?",
        "options": [
            {
                "option_text": "HashMap",
                "is_correct": false
            },
            {
                "option_text": "Stack (Stek)",
                "is_correct": true
            },
            {
                "option_text": "Queue (Navbat)",
                "is_correct": false
            },
            {
                "option_text": "Tree(Daraxt)",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Qaysi algoritm kenglik bo‘yicha ko‘ruv (BFS) uchun ishlatiladi?",
        "options": [
            {
                "option_text": "Queue (Navbat)",
                "is_correct": true
            },
            {
                "option_text": "Stack (Stek)",
                "is_correct": false
            },
            {
                "option_text": "HashMap",
                "is_correct": false
            },
            {
                "option_text": "Tree(Daraxt)",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "DFS algoritmi qaysi ma'lumotlar tuzilmasidan foydalanadi?",
        "options": [
            {
                "option_text": "Binar daraxt",
                "is_correct": false
            },
            {
                "option_text": "Stek",
                "is_correct": true
            },
            {
                "option_text": "Navbat",
                "is_correct": false
            },
            {
                "option_text": "Lug‘at",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "BFS algoritmi qaysi ma'lumotlar tuzilmasidan foydalanadi?",
        "options": [
            {
                "option_text": "Navbat",
                "is_correct": true
            },
            {
                "option_text": "Stek",
                "is_correct": false
            },
            {
                "option_text": "Binar daraxt",
                "is_correct": false
            },
            {
                "option_text": "Lug‘at",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Qaysi ko‘ruv algoritmi graflarda sikllarni aniqlash uchun ishlatiladi?",
        "options": [
            {
                "option_text": "A*",
                "is_correct": false
            },
            {
                "option_text": "BFS",
                "is_correct": false
            },
            {
                "option_text": "DFS",
                "is_correct": true
            },
            {
                "option_text": "Prim’s",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Qaysi algoritm qisqa yo‘lni topish uchun kenglik bo‘yicha ko‘ruvdan foydalanadi?",
        "options": [
            {
                "option_text": "Kruskal",
                "is_correct": false
            },
            {
                "option_text": "DFS",
                "is_correct": false
            },
            {
                "option_text": "Dijkstra",
                "is_correct": false
            },
            {
                "option_text": "BFS",
                "is_correct": true
            }
        ]
    },
    {
        "question_text": "Qaysi algoritmda graflar bo‘ylab \"yo‘qolmaslik\" uchun stek ishlatiladi?",
        "options": [
            {
                "option_text": "DFS",
                "is_correct": true
            },
            {
                "option_text": "BFS",
                "is_correct": false
            },
            {
                "option_text": "Dijkstra",
                "is_correct": false
            },
            {
                "option_text": "Floyd-Warshall",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Kenglik bo‘yicha ko‘ruv (BFS) algoritmida qaysi element birinchi bo‘lib tashrif buyuriladi?",
        "options": [
            {
                "option_text": "O‘ngdagi eng pastki tugun",
                "is_correct": false
            },
            {
                "option_text": "O‘ngdagi eng chuqur tugun",
                "is_correct": false
            },
            {
                "option_text": "Ildiz tugun",
                "is_correct": true
            },
            {
                "option_text": "Chapdagi eng pastki tugun",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "DFS algoritmi qaysi holatda samaraliroq bo‘ladi?",
        "options": [
            {
                "option_text": "Qo‘shma graflarda",
                "is_correct": false
            },
            {
                "option_text": "Yassi graflarda",
                "is_correct": false
            },
            {
                "option_text": "Chuqur bo‘lgan grafda",
                "is_correct": true
            },
            {
                "option_text": "Bir xil graflarda",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Qaysi ko‘ruv algoritmi birinchi bo‘lib barcha qo‘shni tugunlarni ko‘radi?",
        "options": [
            {
                "option_text": "BFS",
                "is_correct": true
            },
            {
                "option_text": "DFS",
                "is_correct": false
            },
            {
                "option_text": "A*",
                "is_correct": false
            },
            {
                "option_text": "Bellman-Ford",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "DFS algoritmi bilan graflarda qaysi ma'lumotlar tuzilmasidan foydalaniladi?",
        "options": [
            {
                "option_text": "ArrayList",
                "is_correct": false
            },
            {
                "option_text": "Queue",
                "is_correct": false
            },
            {
                "option_text": "Stack",
                "is_correct": true
            },
            {
                "option_text": "Heap",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "BFS algoritmi qanday graf turlarida samarali ishlaydi?",
        "options": [
            {
                "option_text": "Yassi va keng graflarda",
                "is_correct": true
            },
            {
                "option_text": "Chuqur va uzun graflarda",
                "is_correct": false
            },
            {
                "option_text": "Siklli graflarda",
                "is_correct": false
            },
            {
                "option_text": "Qo‘shma graflarda",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "DFS algoritmida qaysi vaqtda graflar bo‘ylab rekursiya ishlatiladi?",
        "options": [
            {
                "option_text": "Tugunlar oralig‘ida",
                "is_correct": false
            },
            {
                "option_text": "Har bir yangi tugun tashrif buyurilganda",
                "is_correct": true
            },
            {
                "option_text": "Faqat sikl topilganda",
                "is_correct": false
            },
            {
                "option_text": "Faqat oxirgi tugunlarda",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "BFS algoritmi qanday navbatda tugunlarni tashrif buyuradi?",
        "options": [
            {
                "option_text": "Kenglik bo‘yicha",
                "is_correct": true
            },
            {
                "option_text": "Chuqurlik bo‘yicha",
                "is_correct": false
            },
            {
                "option_text": "Qo‘shni tugunlardan uzoqda",
                "is_correct": false
            },
            {
                "option_text": "Yangi tugunlardan birinchi bo‘lib",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "DFS algoritmi bilan qanday grafda hamma tugunlarga tashrif buyuriladi?",
        "options": [
            {
                "option_text": "Og‘irliksiz graf",
                "is_correct": false
            },
            {
                "option_text": "Yassi graf",
                "is_correct": false
            },
            {
                "option_text": "Siklsiz graf",
                "is_correct": false
            },
            {
                "option_text": "Qo‘shma graf",
                "is_correct": true
            }
        ]
    },
    {
        "question_text": "Qaysi algoritm graflarda eng qisqa yo‘lni topishda ishlatiladi?",
        "options": [
            {
                "option_text": "DFS",
                "is_correct": false
            },
            {
                "option_text": "Dijkstra",
                "is_correct": true
            },
            {
                "option_text": "BFS",
                "is_correct": false
            },
            {
                "option_text": "Kruskal",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Dijkstra algoritmi qanday graflarda eng qisqa yo‘lni topish uchun ishlatiladi?",
        "options": [
            {
                "option_text": "Siklli graflarda",
                "is_correct": false
            },
            {
                "option_text": "Manfiy og‘irlikli graflarda",
                "is_correct": false
            },
            {
                "option_text": "Musbat og‘irlikli graflarda",
                "is_correct": true
            },
            {
                "option_text": "Og‘irliksiz graflarda",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Bellman-Ford algoritmi qaysi holatlarda Dijkstra algoritmidan samaraliroq hisoblanadi?",
        "options": [
            {
                "option_text": "Manfiy og‘irliklar mavjud bo‘lgan graflarda",
                "is_correct": true
            },
            {
                "option_text": "Musbat og‘irlikli graflarda",
                "is_correct": false
            },
            {
                "option_text": "Siklsiz graflarda",
                "is_correct": false
            },
            {
                "option_text": "Qo‘shma graflarda",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Floyd-Warshall algoritmi nimaga mo‘ljallangan?",
        "options": [
            {
                "option_text": "Chuqurlik bo‘yicha qidiruv",
                "is_correct": false
            },
            {
                "option_text": "Siklni aniqlash",
                "is_correct": false
            },
            {
                "option_text": "Har bir tugundan boshqa barcha tugunlarga bo‘lgan eng qisqa yo‘llarni topish",
                "is_correct": true
            },
            {
                "option_text": "Minimal kesishish daraxtini qurish",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Qaysi algoritm siklni o‘z ichiga olgan manfiy og‘irlikli graflarda ishlamaydi?",
        "options": [
            {
                "option_text": "Floyd-Warshall",
                "is_correct": false
            },
            {
                "option_text": "Dijkstra",
                "is_correct": true
            },
            {
                "option_text": "Bellman-Ford",
                "is_correct": false
            },
            {
                "option_text": "BFS",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Bellman-Ford algoritmi qanday murakkablikka ega?",
        "options": [
            {
                "option_text": "O(V^2)",
                "is_correct": false
            },
            {
                "option_text": "O(V + E)",
                "is_correct": false
            },
            {
                "option_text": "O(V * E)",
                "is_correct": true
            },
            {
                "option_text": "O(log V)",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Dijkstra algoritmi qaysi ma'lumotlar tuzilmasidan foydalanadi?",
        "options": [
            {
                "option_text": "Ustivor navbat (Priority Queue)",
                "is_correct": true
            },
            {
                "option_text": "Stack (Stek)",
                "is_correct": false
            },
            {
                "option_text": "Navbat (Queue)",
                "is_correct": false
            },
            {
                "option_text": "Array (Massiv)",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Qaysi algoritm manfiy og‘irliklarni qayta ishlay oladi?",
        "options": [
            {
                "option_text": "Bellman-Ford",
                "is_correct": true
            },
            {
                "option_text": "Prim's",
                "is_correct": false
            },
            {
                "option_text": "Dijkstra",
                "is_correct": false
            },
            {
                "option_text": "BFS",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Floyd-Warshall algoritmi qanday murakkablikka ega?",
        "options": [
            {
                "option_text": "O(V^2)",
                "is_correct": false
            },
            {
                "option_text": "O(V^3)",
                "is_correct": true
            },
            {
                "option_text": "O(V * E)",
                "is_correct": false
            },
            {
                "option_text": "O(V log V)",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Qaysi algoritm har qanday og‘irlikdagi graflarda ishlay oladi?",
        "options": [
            {
                "option_text": "BFS",
                "is_correct": false
            },
            {
                "option_text": "Dijkstra",
                "is_correct": false
            },
            {
                "option_text": "Bellman-Ford",
                "is_correct": true
            },
            {
                "option_text": "DFS",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Qaysi algoritmda har bir qadamda eng qisqa yo‘l ma'lumotlari yangilanadi?",
        "options": [
            {
                "option_text": "Dijkstra",
                "is_correct": false
            },
            {
                "option_text": "BFS",
                "is_correct": false
            },
            {
                "option_text": "DFS",
                "is_correct": false
            },
            {
                "option_text": "Bellman-Ford",
                "is_correct": true
            }
        ]
    },
    {
        "question_text": "Dijkstra algoritmining murakkabligi qanday hisoblanadi?",
        "options": [
            {
                "option_text": "O(V^2)",
                "is_correct": false
            },
            {
                "option_text": "O(V log V + E log V)",
                "is_correct": true
            },
            {
                "option_text": "O(V * E)",
                "is_correct": false
            },
            {
                "option_text": "O(V log V)",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Eng qisqa yo‘lni topish algoritmlaridan qaysi biri musbat va manfiy og‘irliklarni ko‘rib chiqadi?",
        "options": [
            {
                "option_text": "Prim's",
                "is_correct": false
            },
            {
                "option_text": "Dijkstra",
                "is_correct": false
            },
            {
                "option_text": "Bellman-Ford",
                "is_correct": true
            },
            {
                "option_text": "Kruskal",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Bellman-Ford algoritmida qaysi holatda eng qisqa yo‘l topilmaydi?",
        "options": [
            {
                "option_text": "Agar grafda manfiy og‘irlikli sikl bo‘lsa",
                "is_correct": true
            },
            {
                "option_text": "Agar graf og‘irliksiz bo‘lsa",
                "is_correct": false
            },
            {
                "option_text": "Agar graf siklsiz bo‘lsa",
                "is_correct": false
            },
            {
                "option_text": "Agar graf musbat og‘irlikka ega bo‘lsa",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Qirralari soni tugunlar soniga yaqin  bo'lgan graf bu - ?",
        "options": [
            {
                "option_text": "Siyrak graf",
                "is_correct": true
            },
            {
                "option_text": "To`yingan graf",
                "is_correct": false
            },
            {
                "option_text": "To`liq graf",
                "is_correct": false
            },
            {
                "option_text": "Multi graf",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Agar grafda boshi va oxiri bitta tugunda tutashadigan qirra mavjud bo'lsa, unga qanday qirra deyiladi?",
        "options": [
            {
                "option_text": "ilmoqli qirra",
                "is_correct": true
            },
            {
                "option_text": "qo`shni qirra",
                "is_correct": false
            },
            {
                "option_text": "yon qirra",
                "is_correct": false
            },
            {
                "option_text": "bosh qirra",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Ixtiyoriy tugundan boshqa bironta tugunga murojaat mavjud va murojaat ikki tomonlama bo’lsa, bu holda bunday graf ... deyiladi",
        "options": [
            {
                "option_text": "yo’naltirilgan graf",
                "is_correct": false
            },
            {
                "option_text": "yo’naltirilmagan graf",
                "is_correct": true
            },
            {
                "option_text": "Multigraf",
                "is_correct": false
            },
            {
                "option_text": "Siyrak graf",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Agar grafda takroriy (karrali) qirralar mavjud bo`lsa, bunday grafga ............. deyiladi",
        "options": [
            {
                "option_text": "yo’naltirilmagan graf",
                "is_correct": false
            },
            {
                "option_text": "yo'naltirilgan graflar",
                "is_correct": false
            },
            {
                "option_text": "Multigraf",
                "is_correct": true
            },
            {
                "option_text": "To`yingan graf",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Grafning bir uchdan chiqqan ikki qirrasi ... deyiladi",
        "options": [
            {
                "option_text": "qo`shni uchlar",
                "is_correct": false
            },
            {
                "option_text": "tugun",
                "is_correct": false
            },
            {
                "option_text": "qo`shni qirralar",
                "is_correct": true
            },
            {
                "option_text": "Yoylar ro‘yhati",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Ma’lumotlarni tasniflash qaysi ko`rinishdagi bosqichlarga  ajratiladi",
        "options": [
            {
                "option_text": "Abstakt, Matematik, Fizik",
                "is_correct": false
            },
            {
                "option_text": "Mateamtik, Mantiqiy, Abstrakt",
                "is_correct": false
            },
            {
                "option_text": "Abstarkt, Mantiqiy, Fizik",
                "is_correct": true
            },
            {
                "option_text": "Fizik, Matematik, Abstrakt",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Ma'lumotlar turlari nima?",
        "options": [
            {
                "option_text": "Faqat sonli qiymatlar",
                "is_correct": false
            },
            {
                "option_text": "Har xil turdagi ma'lumotlar yig'indisi",
                "is_correct": true
            },
            {
                "option_text": "Faqat matnli ma'lumotlar",
                "is_correct": false
            },
            {
                "option_text": "O'zgaruvchan uzunlikdagi ma'lumotlar",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Abstract tuzilmalari nima?",
        "options": [
            {
                "option_text": "O'zgaruvchan ma'lumotlarni ifodalash",
                "is_correct": false
            },
            {
                "option_text": "Ma'lumotlar haqida umumiy tushuncha beradigan tuzilma",
                "is_correct": true
            },
            {
                "option_text": "Faqat raqamli ma'lumotlar saqlanadi",
                "is_correct": false
            },
            {
                "option_text": "Faqat massivlardan iborat",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Algoritmlarni ishlab chiqishning asosiy bosqichi qaysi?",
        "options": [
            {
                "option_text": "Ma'lumotlarni tahlil qilish",
                "is_correct": false
            },
            {
                "option_text": "Algoritmni yozish",
                "is_correct": true
            },
            {
                "option_text": "Natijani chiqarish",
                "is_correct": false
            },
            {
                "option_text": "Algoritmni optimallashtirish",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Saralash algoritmlarini tahlil qilishning asosiy maqsadi nima?",
        "options": [
            {
                "option_text": "Algoritmni bajarish tezligini oshirish",
                "is_correct": true
            },
            {
                "option_text": "Algoritmning to'g'ri ishlashini tekshirish",
                "is_correct": false
            },
            {
                "option_text": "Natijani to'g'ri chiqarish",
                "is_correct": false
            },
            {
                "option_text": "Algoritmni o'zgartirish",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Ma'lumotlar tuzilmasi nima?",
        "options": [
            {
                "option_text": "Faqat bitta turdagi ma'lumotlar",
                "is_correct": false
            },
            {
                "option_text": "Turli xil ma'lumotlarni birlashtirish tuzilmasi",
                "is_correct": false
            },
            {
                "option_text": "Faqat o'zgaruvchan uzunlikdagi massivlar",
                "is_correct": false
            },
            {
                "option_text": "Ma'lumotlarni to'liq saqlash va boshqarish usuli",
                "is_correct": true
            }
        ]
    },
    {
        "question_text": "Massiv nima?",
        "options": [
            {
                "option_text": "Ma'lumotlar turini o'zgarishsiz saqlaydigan tuzilma",
                "is_correct": false
            },
            {
                "option_text": "Ma'lumotlarni tartib bilan saqlaydigan tuzilma",
                "is_correct": true
            },
            {
                "option_text": "Faqat bitta elementni saqlaydigan tuzilma",
                "is_correct": false
            },
            {
                "option_text": "Ma'lumotlar turini faqat raqamli tarzda saqlash",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Vektor nima?",
        "options": [
            {
                "option_text": "Faqat o'zgaruvchan uzunlikdagi ma'lumotlarni saqlaydigan tuzilma",
                "is_correct": true
            },
            {
                "option_text": "Faoliyatni ko'rsatuvchi tuzilma",
                "is_correct": false
            },
            {
                "option_text": "Ma'lumotlar turini o'zgarishsiz saqlaydigan tuzilma",
                "is_correct": false
            },
            {
                "option_text": "Ma'lumot turini saqlashni cheklash",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Yozuvlar (Records) nima?",
        "options": [
            {
                "option_text": "Faqat bitta ma'lumot turini saqlaydi",
                "is_correct": false
            },
            {
                "option_text": "Har xil ma'lumot turlarini birlashtiradigan tuzilma",
                "is_correct": true
            },
            {
                "option_text": "Faqat matnli ma'lumotlarni saqlaydi",
                "is_correct": false
            },
            {
                "option_text": "Ma'lumotlar turini faqat raqamli tarzda saqlash",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "To‘plam (Set) nima?",
        "options": [
            {
                "option_text": "Faqat o'zgaruvchan va o'zgarmas uzunlikdagi elementlar",
                "is_correct": false
            },
            {
                "option_text": "Takrorlanmas ma'lumotlardan iborat tuzilma",
                "is_correct": true
            },
            {
                "option_text": "Ma'lumotlarni tartib bilan saqlaydigan tuzilma",
                "is_correct": false
            },
            {
                "option_text": "Bir xil qiymatlarni saqlaydi",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Ko‘rsatkichli turlar (Pointer types) nima?",
        "options": [
            {
                "option_text": "Ma'lumotlarni saqlash uchun maxsus turlardir",
                "is_correct": false
            },
            {
                "option_text": "Faqat bitta qiymatni saqlaydigan tuzilma",
                "is_correct": false
            },
            {
                "option_text": "Ma'lumotlarning xotiradagi manzilini ko'rsatadi",
                "is_correct": true
            },
            {
                "option_text": "Faqat bitta ma'lumot turini saqlaydi",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Massivning asosiy xususiyati nima?",
        "options": [
            {
                "option_text": "Faqat bitta turdagi ma'lumotni saqlaydi",
                "is_correct": true
            },
            {
                "option_text": "O'zgaruvchan uzunlikdagi elementlar sonini qaytaradi",
                "is_correct": false
            },
            {
                "option_text": "Ma'lumotlarni faqat tartiblangan holda saqlaydi",
                "is_correct": false
            },
            {
                "option_text": "Har xil ma'lumot turlarini birlashtiradi",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Yozuv (Record) nima?",
        "options": [
            {
                "option_text": "Faqat o'zgaruvchan uzunlikdagi elementlar saqlaydi",
                "is_correct": false
            },
            {
                "option_text": "Har xil ma'lumot turlarini birlashtirgan tuzilma",
                "is_correct": true
            },
            {
                "option_text": "Faqat bitta ma'lumot turini saqlaydi",
                "is_correct": false
            },
            {
                "option_text": "Ma'lumotlarni tartib bilan saqlaydi",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Ko‘rsatkichli turlar qanday ishlaydi?",
        "options": [
            {
                "option_text": "Ma'lumotlar manzilini saqlaydi",
                "is_correct": true
            },
            {
                "option_text": "Faqat matnli ma'lumotlarni saqlaydi",
                "is_correct": false
            },
            {
                "option_text": "O'zgaruvchan uzunlikdagi ma'lumotlarni saqlaydi",
                "is_correct": false
            },
            {
                "option_text": "Ma'lumotlar orasidagi munosabatni ko'rsatadi",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Chiziqli ma'lumotlar tuzilmalari nima?",
        "options": [
            {
                "option_text": "Faqat bitta ma'lumot turini saqlaydigan tuzilma",
                "is_correct": false
            },
            {
                "option_text": "Ma'lumotlarni ketma-ket joylashgan holda saqlaydigan tuzilma",
                "is_correct": true
            },
            {
                "option_text": "O'zgaruvchan uzunlikdagi ma'lumotlarni saqlaydi",
                "is_correct": false
            },
            {
                "option_text": "Ma'lumotlar orasidagi joyini ko'rsatadi",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Rekursiya nima?",
        "options": [
            {
                "option_text": "Algoritmning o'zini o'zi chaqirishi",
                "is_correct": true
            },
            {
                "option_text": "Faqat bitta qiymatni qaytaruvchi algoritm",
                "is_correct": false
            },
            {
                "option_text": "Ma'lumotlarni ketma-ket saqlash usuli",
                "is_correct": false
            },
            {
                "option_text": "Ma'lumotlar orasidagi aloqalarni topish",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Rekursiv algoritmni ishlatishning asosiy afzalligi nima?",
        "options": [
            {
                "option_text": "Tizimning ish tezligini oshirish",
                "is_correct": false
            },
            {
                "option_text": "Algoritmni sodda va tushunarli qilish",
                "is_correct": true
            },
            {
                "option_text": "Ma'lumotlarni faqat tartib bilan saqlash",
                "is_correct": false
            },
            {
                "option_text": "Faqat aniq bir ma'lumotni qaytarish",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Rekursiya qanday ishlaydi?",
        "options": [
            {
                "option_text": "Algoritmni qayta-qayta bajarish",
                "is_correct": true
            },
            {
                "option_text": "Algoritmni faqat bir marta bajarish",
                "is_correct": false
            },
            {
                "option_text": "Ma'lumotlarni tahlil qilish",
                "is_correct": false
            },
            {
                "option_text": "Faqat bitta ma'lumot turini ishlatish",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Rekursiv algoritmlarni tahlil qilishda qanday asosiy faktorlarga e'tibor qaratish kerak?",
        "options": [
            {
                "option_text": "Xotira va vaqt samaradorligi",
                "is_correct": true
            },
            {
                "option_text": "Faqat vaqt samaradorligi",
                "is_correct": false
            },
            {
                "option_text": "Faqat xotira samaradorligi",
                "is_correct": false
            },
            {
                "option_text": "Faqat algoritmning tuzilishi",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Rekursiv algoritmlar qanday hollarda ishlatiladi?",
        "options": [
            {
                "option_text": "Ma'lumotlar o'zgaruvchan uzunlikda bo'lganda",
                "is_correct": true
            },
            {
                "option_text": "Yig'indilarni hisoblashda",
                "is_correct": false
            },
            {
                "option_text": "Ma'lumotlar tartibsiz ko'rinishda bo'lganda",
                "is_correct": false
            },
            {
                "option_text": "Ma'lumotlar orasida biror aloqalar mavjud bo'lsa",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Qidiruv algoritmlari nima?",
        "options": [
            {
                "option_text": "Ma'lumotlarni tasvirlash usullari",
                "is_correct": false
            },
            {
                "option_text": "Ma'lumotlar orasidan kerakli ma'lumotni tez topish usullari",
                "is_correct": true
            },
            {
                "option_text": "Ma'lumotlarni tartib bilan saqlash",
                "is_correct": false
            },
            {
                "option_text": "Ma'lumotlarni optimallashtirish usullari",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Qidiruvning asosiy vazifasi nima?",
        "options": [
            {
                "option_text": "Ma'lumotlarni saqlashni osonlashtirish",
                "is_correct": false
            },
            {
                "option_text": "Ma'lumotlarni optimallashtirish",
                "is_correct": false
            },
            {
                "option_text": "Kerakli ma'lumotni tez topish",
                "is_correct": true
            },
            {
                "option_text": "Ma'lumotlarni tartib bilan saqlash",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Chiziqli qidiruv nima?",
        "options": [
            {
                "option_text": "Har bir elementni ketma-ket tekshirib chiqish",
                "is_correct": true
            },
            {
                "option_text": "Qidiruvning eng tezkor usuli",
                "is_correct": false
            },
            {
                "option_text": "Faqat birinchi ma'lumotni topish",
                "is_correct": false
            },
            {
                "option_text": "Kerakli ma'lumotni faqat oxirgi elementdan so'ng izlash",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Binar qidiruv qanday ishlaydi?",
        "options": [
            {
                "option_text": "Elementlarni tasodifiy tekshirib chiqadi",
                "is_correct": false
            },
            {
                "option_text": "Elementlar o'rtasidagi farqni hisoblaydi",
                "is_correct": false
            },
            {
                "option_text": "Massiv elementlarini teng ikkiga bo'lish usuli asosida",
                "is_correct": true
            },
            {
                "option_text": "Faqat ma'lumotlar qatorini qaytaradi",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Chiziqli qidiruvning samaradorligi qanday?",
        "options": [
            {
                "option_text": "O(N)",
                "is_correct": true
            },
            {
                "option_text": "O(logN)",
                "is_correct": false
            },
            {
                "option_text": "O(N*LogN)",
                "is_correct": false
            },
            {
                "option_text": "O(N*N)",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Binar qidiruvning samaradorligi qanday?",
        "options": [
            {
                "option_text": "O(N)",
                "is_correct": false
            },
            {
                "option_text": "O(logN)",
                "is_correct": false
            },
            {
                "option_text": "O(N*LogN)",
                "is_correct": false
            },
            {
                "option_text": "O(N*N)",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Qidiruv algoritmlarini taqqoslashda qanday parametrlar asosiy hisoblanadi?",
        "options": [
            {
                "option_text": "Xotira va vaqt samaradorligi",
                "is_correct": true
            },
            {
                "option_text": "Faqat xotira samaradorligi",
                "is_correct": false
            },
            {
                "option_text": "Faqat vaqt samaradorligi",
                "is_correct": false
            },
            {
                "option_text": "Faqat algoritmning tuzilishi",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Binar qidiruv qanday ma'lumotlar uchun samarali?",
        "options": [
            {
                "option_text": "Tartiblangan ma'lumotlar uchun",
                "is_correct": true
            },
            {
                "option_text": "Faqat raqamli ma'lumotlar uchun",
                "is_correct": false
            },
            {
                "option_text": "Faqat matnli ma'lumotlar uchun",
                "is_correct": false
            },
            {
                "option_text": "Har qanday ma'lumotlar uchun",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Chiziqli qidiruvning afzalliklari nimalardan iborat?",
        "options": [
            {
                "option_text": "Tartiblangan ma'lumotlar uchun samarali",
                "is_correct": false
            },
            {
                "option_text": "Tartiblanmagan ma'lumotlarni qidirish",
                "is_correct": true
            },
            {
                "option_text": "Faqat kichik ma'lumotlar uchun ishlaydi",
                "is_correct": false
            },
            {
                "option_text": "Faqat birinchi elementni topishga yordam beradi",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Xesh jadvali nima?",
        "options": [
            {
                "option_text": "Ma'lumotlarni tartib bilan saqlaydigan tuzilma",
                "is_correct": false
            },
            {
                "option_text": "Ma'lumotlarni ma'lum bir kalit orqali saqlash tuzilmasi",
                "is_correct": true
            },
            {
                "option_text": "Faqat ma'lumotlarni qidirish uchun ishlatiladigan tuzilma",
                "is_correct": false
            },
            {
                "option_text": "Ma'lumotlarni faqat tartibli holda qaytaradi",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Xesh funksiyasi nima?",
        "options": [
            {
                "option_text": "Ma'lumotlarni raqamli tarzda ifodalovchi funksiya",
                "is_correct": false
            },
            {
                "option_text": "Ma'lumotlarni ma'lum bir tartibda saqlovchi funksiya",
                "is_correct": false
            },
            {
                "option_text": "Ma'lumotni xesh jadvaliga joylashtirish uchun ishlatiladigan funksiya",
                "is_correct": true
            },
            {
                "option_text": "Faoliyatlarni ko'rsatish uchun ishlatiladigan funksiya",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Xesh jadvali qanday ishlaydi?",
        "options": [
            {
                "option_text": "Har bir ma'lumotni faqat bitta joyda saqlaydi",
                "is_correct": false
            },
            {
                "option_text": "Ma'lumotlarni tasodifiy tarzda saqlaydi",
                "is_correct": false
            },
            {
                "option_text": "Har bir ma'lumot uchun kalit orqali joy ajratadi",
                "is_correct": true
            },
            {
                "option_text": "Faqat ma'lumotlarni tartib bilan saqlaydi",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Xesh funksiyasining asosiy maqsadi nima?",
        "options": [
            {
                "option_text": "Ma'lumotlarni tartib bilan saqlash",
                "is_correct": false
            },
            {
                "option_text": "Ma'lumotni tezda qidirish uchun kalit yaratish",
                "is_correct": true
            },
            {
                "option_text": "Ma'lumotni faqat saqlash",
                "is_correct": false
            },
            {
                "option_text": "Yalpi qidiruvni amalga oshirish",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Xesh jadvalidagi koliziya nima?",
        "options": [
            {
                "option_text": "Bir xil kalitga ega bo'lgan ikki ma'lumot",
                "is_correct": true
            },
            {
                "option_text": "Faqat katta ma'lumotlar uchun ishlatiladi",
                "is_correct": false
            },
            {
                "option_text": "Ma'lumotlarni faqat tartibda saqlash",
                "is_correct": false
            },
            {
                "option_text": "Faqat ma'lumotlar orasidagi aloqani aniqlash",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Xesh funksiyasining ishlash samaradorligi nimaga bog'liq?",
        "options": [
            {
                "option_text": "Kalitning taqsimlanishiga va koliziyalarga",
                "is_correct": true
            },
            {
                "option_text": "Faqat koliziyalarga",
                "is_correct": false
            },
            {
                "option_text": "Faqat kalitlarning soniga",
                "is_correct": false
            },
            {
                "option_text": "Faqat ma'lumotlarning soniga",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Saralash algoritmlari nima?",
        "options": [
            {
                "option_text": "Ma'lumotlarni tartibga solish usullari",
                "is_correct": true
            },
            {
                "option_text": "Ma'lumotlarni faqat saqlash usullari",
                "is_correct": false
            },
            {
                "option_text": "Ma'lumotlarni qidirish usullari",
                "is_correct": false
            },
            {
                "option_text": "Ma'lumotlarni optimallashtirish usullari",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Saralashning asosiy vazifasi nima?",
        "options": [
            {
                "option_text": "Ma'lumotlarni tartibga solish",
                "is_correct": true
            },
            {
                "option_text": "Ma'lumotlarni saqlashni osonlashtirish",
                "is_correct": false
            },
            {
                "option_text": "Ma'lumotlarni faqat qidirish",
                "is_correct": false
            },
            {
                "option_text": "Ma'lumotlarni optimallashtirish",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "\"Pufakli\" saralash algoritmi qanday ishlaydi?",
        "options": [
            {
                "option_text": "Har bir juft elementni solishtirib, kerakli joylarini almashtiradi",
                "is_correct": true
            },
            {
                "option_text": "Har bir elementni faqat bir marta tekshiradi",
                "is_correct": false
            },
            {
                "option_text": "Faqat katta ma'lumotlar bilan ishlaydi",
                "is_correct": false
            },
            {
                "option_text": "Faoliyatni maksimal darajada tezlashtiradi",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Saralashning samaradorligi qanday baholanadi?",
        "options": [
            {
                "option_text": "Vaqt va xotira sarfi orqali",
                "is_correct": true
            },
            {
                "option_text": "Faqat vaqt sarfi orqali",
                "is_correct": false
            },
            {
                "option_text": "Faqat xotira sarfi orqali",
                "is_correct": false
            },
            {
                "option_text": "Faqat algoritmning tuzilishi orqali",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "\"Tez saralash\" algoritmi qanday ishlaydi?",
        "options": [
            {
                "option_text": "Ma'lumotlarni bo'lib, har bir bo'limni saralaydi",
                "is_correct": true
            },
            {
                "option_text": "Har bir juft elementni solishtiradi",
                "is_correct": false
            },
            {
                "option_text": "Ma'lumotlarni faqat tartibga soladi",
                "is_correct": false
            },
            {
                "option_text": "Faqat katta ma'lumotlar bilan ishlaydi",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "\"MergeSort\" algoritmi qanday ishlaydi?",
        "options": [
            {
                "option_text": "Ma'lumotlarni ketma-ket ikkiga bo'lib ularni o'zaro solishtirish orqali tartibga soladi va keyin ularni birlashtiradi",
                "is_correct": true
            },
            {
                "option_text": "Faqat bitta elementni solishtiradi, keyin bu  elemetni oxiriga joylashtiradi va keyingi amalni bajardi",
                "is_correct": false
            },
            {
                "option_text": "Faqat bir xil turdagi ma'lumotlarni saralaydi",
                "is_correct": false
            },
            {
                "option_text": "Ma'lumotlarni birlashtirishni optimallashtiradi",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "\"SelectionSort\" algoritmi qanday ishlaydi?",
        "options": [
            {
                "option_text": "Eng kichik elementni tanlab, uni tartiblangan qismga qo'shadi",
                "is_correct": true
            },
            {
                "option_text": "Ma'lumotlarni faqat o'rtacha tartibga soladi",
                "is_correct": false
            },
            {
                "option_text": "Har bir elementni bir-biriga qarama-qarshi joylashtiradi",
                "is_correct": false
            },
            {
                "option_text": "Ma'lumotlarni faqat birinchi elementga qarab saralaydi",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Chiziqli konteynerlarning afzalliklari nimalardan iborat?",
        "options": [
            {
                "option_text": "Ma'lumotlarga tezkor kirish imkoniyati",
                "is_correct": true
            },
            {
                "option_text": "Ma'lumotlarni faqat tartibda saqlash",
                "is_correct": false
            },
            {
                "option_text": "Faqat bitta va undan ko'p turli turdagi ma'lumotlarni saqlash",
                "is_correct": false
            },
            {
                "option_text": "Faqat qidirish uchun ishlatiladi",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Bog'langan ro‘yxatlar nima?",
        "options": [
            {
                "option_text": "Ma'lumotlar elementlarini pointerlar yordamida bog'lash",
                "is_correct": true
            },
            {
                "option_text": "Ma'lumotlar faqat tartibda saqlanadi",
                "is_correct": false
            },
            {
                "option_text": "Faqat o'zgaruvchan ma'lumotlar bilan ishlaydi",
                "is_correct": false
            },
            {
                "option_text": "Ma'lumotlar bir-biriga bog'lanmaydi",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Chiziqli bog'langan ro‘yxatlar qanday ishlaydi?",
        "options": [
            {
                "option_text": "Har bir element keyingi elementga pointer yordamida bog'lanadi",
                "is_correct": true
            },
            {
                "option_text": "Har bir element faqat tartibda saqlanadi",
                "is_correct": false
            },
            {
                "option_text": "Elementlar faqat o'qish uchun ishlatiladi",
                "is_correct": false
            },
            {
                "option_text": "Faqat bitta turdagi ma'lumotlarni saqlaydi",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Ikki bog'lamli ro‘yxat nima?",
        "options": [
            {
                "option_text": "Har bir element ikki pointerga ega",
                "is_correct": true
            },
            {
                "option_text": "Har bir element faqat bitta pointerga ega",
                "is_correct": false
            },
            {
                "option_text": "Faqat tartibda saqlanadi",
                "is_correct": false
            },
            {
                "option_text": "Ma'lumotlar faqat o'qiladi",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Chiziqli bog'langan ro‘yxatlar qanday tashkil etilgan?",
        "options": [
            {
                "option_text": "Birinchi element va undan keyingi barcha elementlar pointerlar yordamida bog'lanadi",
                "is_correct": true
            },
            {
                "option_text": "Faqat oxirgi element pointerga ega",
                "is_correct": false
            },
            {
                "option_text": "Har bir element bitta pointerga ega, oxirgi element esa pointerga ega emas",
                "is_correct": false
            },
            {
                "option_text": "Har bir element faqat ma'lumotlar saqlaydi",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Chiziqli bog'langan ro‘yxatlarda ma'lumotlarni qanday o'chirish mumkin?",
        "options": [
            {
                "option_text": "Biror elementni o'chirish uchun pointerlarni o'zgartirish kerak",
                "is_correct": true
            },
            {
                "option_text": "Faqat oxirgi elementni o'chirish mumkin",
                "is_correct": false
            },
            {
                "option_text": "Har bir elementni o'chirish mumkin",
                "is_correct": false
            },
            {
                "option_text": "Ma'lumotlar faqat bir xil turdagi bo'ladi",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Stek nima?",
        "options": [
            {
                "option_text": "Ma'lumotlar faqat bir yo'nalishda qo'shiladi va o'chiriladi (LIFO)",
                "is_correct": false
            },
            {
                "option_text": "Har bir element faqat tartibda qo'shiladi ",
                "is_correct": false
            },
            {
                "option_text": "Elementlar faqat chiziqli bog'langan ro'yxat yordamida saqlanadi",
                "is_correct": false
            },
            {
                "option_text": "Ma'lumotlar ko'p yo'nalishda qo'shiladi",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Navbat nima?",
        "options": [
            {
                "option_text": "Ma'lumotlar birinchi kirish, birinchi chiqish (FIFO) tartibida ishlaydi",
                "is_correct": true
            },
            {
                "option_text": "Ma'lumotlar faqat oxiridan kiradi va chiqadi",
                "is_correct": false
            },
            {
                "option_text": "Ma'lumotlar faqat bir yo'nalishda saqlanadi",
                "is_correct": false
            },
            {
                "option_text": "Ma'lumotlar ko'p yo'nalishda qo'shiladi",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Dek nima?",
        "options": [
            {
                "option_text": "Ma'lumotlar boshidan yoki oxiridan qo'shilishi va chiqarilishi mumkin",
                "is_correct": true
            },
            {
                "option_text": "Faqat boshidan qo'shiladi va o'rtasidan chiqariladi",
                "is_correct": false
            },
            {
                "option_text": "Faqat oxiridan qo'shiladi va boshidan chiqariladi",
                "is_correct": false
            },
            {
                "option_text": "Faqat int turdagi ma'lumotlar saqlanadi va float turiga o'zgartiradi",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Stekning asosiy funksiyalarini ko'rsating?",
        "options": [
            {
                "option_text": "Push va pop",
                "is_correct": true
            },
            {
                "option_text": "Enqueue va dequeue",
                "is_correct": false
            },
            {
                "option_text": "Insert, select va delete",
                "is_correct": false
            },
            {
                "option_text": "Add va remove",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Navbatning asosiy funksiyasi nima?",
        "options": [
            {
                "option_text": "Enqueue va dequeue",
                "is_correct": true
            },
            {
                "option_text": "Push va pop",
                "is_correct": false
            },
            {
                "option_text": "Insert va delete",
                "is_correct": false
            },
            {
                "option_text": "Add va remove",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Stek va navbat farqi nima?",
        "options": [
            {
                "option_text": "Stekda LIFO, navbatda FIFO tartibi ishlaydi",
                "is_correct": true
            },
            {
                "option_text": "Stek faqat FIFO asosida, navbat esa LIFO asosida",
                "is_correct": false
            },
            {
                "option_text": "Navbat faqat birinchi elementni saqlaydi",
                "is_correct": false
            },
            {
                "option_text": "Stek faqat boshidan qo'shiladi",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Dekda qanday amallar bajariladi?",
        "options": [
            {
                "option_text": "Push, pop, enqueue, dequeue",
                "is_correct": true
            },
            {
                "option_text": "Push, pop",
                "is_correct": false
            },
            {
                "option_text": "Insert, delete",
                "is_correct": false
            },
            {
                "option_text": "Add, remove",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Stekni massiv yordamida qanday tasvirlash mumkin?",
        "options": [
            {
                "option_text": "Indekslar yordamida",
                "is_correct": true
            },
            {
                "option_text": "Pointerlar yordamida",
                "is_correct": false
            },
            {
                "option_text": "Faqat bir xil turdagi ma'lumotlar yordamida",
                "is_correct": false
            },
            {
                "option_text": "Faqat chiziqli bog'langan ro'yxat yordamida",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Daraxtda qirra nima?",
        "options": [
            {
                "option_text": "Tugunlarni bog'laydigan yo'l",
                "is_correct": true
            },
            {
                "option_text": "Yangi tugun yaratish",
                "is_correct": false
            },
            {
                "option_text": "Elementlarni saqlash",
                "is_correct": false
            },
            {
                "option_text": "Ma'lumotlar o'rtasidagi tartib",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Daraxtning balandligi nima?",
        "options": [
            {
                "option_text": "Eng yuqori va eng past tugunlar orasidagi masofa",
                "is_correct": true
            },
            {
                "option_text": "Tugunlar orasidagi masofa",
                "is_correct": false
            },
            {
                "option_text": "Yaratilgan tugunlar soni",
                "is_correct": false
            },
            {
                "option_text": "Daraxtdagi bolalar soni",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Daraxtni qanday tasvirlash mumkin?",
        "options": [
            {
                "option_text": "Tugunlar va qirralar yordamida",
                "is_correct": true
            },
            {
                "option_text": "Indekslar yordamida",
                "is_correct": false
            },
            {
                "option_text": "Teskari massivlar yordamida",
                "is_correct": false
            },
            {
                "option_text": "Faqat chiziqli bir bog'lamli ro'yxatlar yordamida",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Binar qidiruv daraxti nima?",
        "options": [
            {
                "option_text": "Ma'lumotlar faqat bitta tugunda saqlanadi",
                "is_correct": false
            },
            {
                "option_text": "Har bir tugunda ikkita bola bo'ladi va ma'lumotlar tartiblanadi",
                "is_correct": true
            },
            {
                "option_text": "Ma'lumotlar faqat tartibda saqlanadi",
                "is_correct": false
            },
            {
                "option_text": "Har bir tugunda uchta bola bo'ladi",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Binar qidiruv daraxtida elementni qo'shish qanday amalga oshiriladi?",
        "options": [
            {
                "option_text": "Tugunning to'g'ri yoki chap bolasi orqali qo'shiladi",
                "is_correct": true
            },
            {
                "option_text": "Har bir tugun faqat oxirgi elementni saqlaydi",
                "is_correct": false
            },
            {
                "option_text": "Element faqat eng yuqori tugunda qo'shiladi",
                "is_correct": false
            },
            {
                "option_text": "Elementni faqat avvalgi tugunga qo'shish mumkin",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Binar qidiruv daraxtida elementni o'chirishda nima amalga oshiriladi?",
        "options": [
            {
                "option_text": "Agar tugun faqat bitta bola bo'lsa, bola tugunga o'rnatiladi",
                "is_correct": true
            },
            {
                "option_text": "Tugun faqat o'chiriladi",
                "is_correct": false
            },
            {
                "option_text": "Element faqat bosh tugundan o'chiriladi",
                "is_correct": false
            },
            {
                "option_text": "Yangi tugun yaratiladi va element o'sha tugunda saqlanadi",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "AVL daraxti nima?",
        "options": [
            {
                "option_text": "Muvozanatlangan binar qidiruv daraxti",
                "is_correct": true
            },
            {
                "option_text": "Daraxtning barcha tugunlari tasodifiy qo'shiladi",
                "is_correct": false
            },
            {
                "option_text": "Har bir tugunda faqat bitta bola mavjud",
                "is_correct": false
            },
            {
                "option_text": "Har bir tugun faqat oxirgi tugunda saqlanadi",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "AVL daraxtining muvozanatlash shartlari qanday?",
        "options": [
            {
                "option_text": "Har bir tugundagi chap va o'ng bolalar orasidagi balandlik farqi 1 ga teng",
                "is_correct": true
            },
            {
                "option_text": "Har bir tugundagi chap va o'ng bolalar orasidagi balandlik farqi 2 ga teng",
                "is_correct": false
            },
            {
                "option_text": "Har bir tugun o'zaro teng bo'lishi kerak",
                "is_correct": false
            },
            {
                "option_text": "Daraxtda faqat bitta tugun bo'lishi kerak",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Heap tree tuzilmasi qanday xususiyatlarga ega?",
        "options": [
            {
                "option_text": "Ota tugun har doim bolasidan katta yoki kichik bo'ladi",
                "is_correct": true
            },
            {
                "option_text": "Har bir tugun faqat bir bola bilan bog'lanadi",
                "is_correct": false
            },
            {
                "option_text": "Faqat chap bolalar bilan ishlaydi",
                "is_correct": false
            },
            {
                "option_text": "Daraxtdagi tugunlar tasodifiy joylashadi",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Heap tree ustida qo'shish qanday amalga oshiriladi?",
        "options": [
            {
                "option_text": "Eng oxirgi tugunga qo'shiladi, so'ngra katta yoki kichik qiymatga qarab o'rnatiladi",
                "is_correct": true
            },
            {
                "option_text": "Daraxtning o'rtasida tugun qo'shiladi",
                "is_correct": false
            },
            {
                "option_text": "Element faqat bosh tugundan qo'shiladi",
                "is_correct": false
            },
            {
                "option_text": "Hech qanday qo'shish amali mavjud emas",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Heap tree tuzilmasining qanday turlari mavjud?",
        "options": [
            {
                "option_text": "Max-Heap va Min-Heap",
                "is_correct": true
            },
            {
                "option_text": "Faqat Max-Heap",
                "is_correct": false
            },
            {
                "option_text": "Faqat Min-Heap",
                "is_correct": false
            },
            {
                "option_text": "Har bir tugun uchun tasodifiy turlar mavjud",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Heap tree ustida o'chirish amali qanday bajariladi?",
        "options": [
            {
                "option_text": "Bosh tugundagi qiymat o'chiriladi va oxirgi tugun olib kelinib, qayta joylashtiriladi",
                "is_correct": true
            },
            {
                "option_text": "Eng kichik yoki katta tugun o'chiriladi",
                "is_correct": false
            },
            {
                "option_text": "Faqat bosh tugun o'chiriladi",
                "is_correct": false
            },
            {
                "option_text": "Hech qanday o'chirish amali mavjud emas",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Grafni tasvirlash usullaridan qaysi biri qo‘shma matritsa orqali amalga oshiriladi?",
        "options": [
            {
                "option_text": "Har bir tugun va uning qo‘shni tugunlari o'rtasidagi bog'lanishlarni matritsada ifodalash",
                "is_correct": true
            },
            {
                "option_text": "Faoliyatni faqat bir tugunda bajarish",
                "is_correct": false
            },
            {
                "option_text": "Faoliyatni tasodifiy amalga oshirish",
                "is_correct": false
            },
            {
                "option_text": "Faqat tugunlar o'rtasidagi masofalarni hisoblash",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Qo‘shma matritsa qanday tasvirlash usulini anglatadi?",
        "options": [
            {
                "option_text": "Tugunlar orasidagi bog'lanishlarni matritsa shaklida saqlash",
                "is_correct": true
            },
            {
                "option_text": "Faqat o'zaro bog'lanmagan tugunlarni tasvirlash",
                "is_correct": false
            },
            {
                "option_text": "Faqat bitta yo'nalishli graflarni tasvirlash",
                "is_correct": false
            },
            {
                "option_text": "Har bir tugun tasodifiy bog'lanadi",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Munosabatlar matritsasi graflarni qanday tasvirlash usuli hisoblanadi?",
        "options": [
            {
                "option_text": "Tugunlar orasidagi bog'lanishlar to'g'risidagi ma'lumotlarni matritsa shaklida saqlash",
                "is_correct": true
            },
            {
                "option_text": "Faqat o'zaro bog'lanmagan tugunlar orasidagi aloqalarni ifodalash",
                "is_correct": false
            },
            {
                "option_text": "Faqat yo'nalishli graflarni tasvirlash",
                "is_correct": false
            },
            {
                "option_text": "Tugunlar faqat bitta matritsada saqlanadi",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Qo‘shnilik ro‘yhati qanday ishlaydi?",
        "options": [
            {
                "option_text": "Har bir tugun uchun uning qo‘shnilarini ro'yxatda saqlash",
                "is_correct": true
            },
            {
                "option_text": "Faqat o'ng bolalar bilan ishlash",
                "is_correct": false
            },
            {
                "option_text": "Daraxtdagi barcha tugunlar orasidagi aloqalarni ro'yxatlash",
                "is_correct": false
            },
            {
                "option_text": "Har bir tugun faqat bir qo‘shniga ega bo'ladi",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Yoylar ro‘yhati qanday ishlaydi?",
        "options": [
            {
                "option_text": "Grafdagi har bir bog'lanishni ifodalaydi",
                "is_correct": true
            },
            {
                "option_text": "Faqat har bir tugundagi ma'lumotlarni saqlash",
                "is_correct": false
            },
            {
                "option_text": "Faqat bir tugun uchun qo‘shnilarni saqlash",
                "is_correct": false
            },
            {
                "option_text": "Hech qanday ma'lumot saqlanmaydi",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Graflarda qo‘shnilik ro‘yhati qanday afzalliklarga ega?",
        "options": [
            {
                "option_text": "Tezda qo‘shnilarni topish va bog'lanishlarni boshqarish",
                "is_correct": true
            },
            {
                "option_text": "Faqat tugunlar o'rtasidagi masofani hisoblashda ishlaydi",
                "is_correct": false
            },
            {
                "option_text": "Faqat bitta yo'nalishda ishlaydi",
                "is_correct": false
            },
            {
                "option_text": "Hech qanday afzallik yo'q",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Graflarni qo‘shma matritsa bilan tasvirlashda qaysi ma'lumotlar saqlanadi?",
        "options": [
            {
                "option_text": "Tugunlar o'rtasidagi bog'lanishlar",
                "is_correct": true
            },
            {
                "option_text": "Faqat har bir tugundagi ma'lumotlar",
                "is_correct": false
            },
            {
                "option_text": "Tugunlar faqat bitta yo'nalishda saqlanadi",
                "is_correct": false
            },
            {
                "option_text": "Har bir tugun faqat o'zining chap bolasini saqlaydi",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Eniga qarab qidiruv (BFS) algoritmi qanday ishlaydi?",
        "options": [
            {
                "option_text": "Tugunlar darajalari bo‘yicha qidiriladi, avval kengaytirilgan tugunlar keyin esa ularning qo‘shnilari qidiriladi",
                "is_correct": true
            },
            {
                "option_text": "Har bir tugun chuqurlik bilan qidiriladi",
                "is_correct": false
            },
            {
                "option_text": "Faqat yo‘nalishli grafda ishlaydi",
                "is_correct": false
            },
            {
                "option_text": "Qidiruv faqat tugunning eng yuqori darajasidan boshlanadi",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Depth-first search (DFS) algoritmi qanday ishlaydi?",
        "options": [
            {
                "option_text": "Har bir tugun chuqurlik bilan, ya'ni avval ularning eng chuqur tugunlari qidiriladi",
                "is_correct": true
            },
            {
                "option_text": "Har bir tugun darajasi bo‘yicha qidiriladi",
                "is_correct": false
            },
            {
                "option_text": "Faqat qo‘shnilarni qidirish orqali amalga oshiriladi",
                "is_correct": false
            },
            {
                "option_text": "Qidiruv faqat boshlang'ich tugundan bir yo'nalish bo‘yicha amalga oshiriladi",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "DFS va BFS algoritmlarining farqi nima?",
        "options": [
            {
                "option_text": "BFS eniga, DFS esa chuqurlik bo'yicha qidiradi",
                "is_correct": true
            },
            {
                "option_text": "BFS faqat bir tugun uchun ishlaydi, DFS esa har bir tugunni tekshiradi",
                "is_correct": false
            },
            {
                "option_text": "DFS faqat o‘ng tomondagi tugunlarni qidiradi, BFS esa chap tomondagilarni",
                "is_correct": false
            },
            {
                "option_text": "DFS faqat yo‘nalishli graflarda ishlaydi",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Graflarda eng qisqa yo‘lni topish uchun Dijkstra algoritmi qanday ishlaydi?",
        "options": [
            {
                "option_text": "Faqat musbat og‘irlikdagi graflarda ishlaydi",
                "is_correct": true
            },
            {
                "option_text": "Har qanday og‘irlikdagi graflarda ishlaydi",
                "is_correct": false
            },
            {
                "option_text": "Yalpi bog'lanmagan graflarda ishlaydi",
                "is_correct": false
            },
            {
                "option_text": "Barcha graflarda ishlaydi",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Dijkstra algoritmi nima uchun samarali?",
        "options": [
            {
                "option_text": "Og‘irliklarni hisoblash uchun ishlaydi va tezroq ishlaydi",
                "is_correct": true
            },
            {
                "option_text": "Qisqa yo‘lni topish uchun butun graflarni tekshiradi",
                "is_correct": false
            },
            {
                "option_text": "Qidiruvni faqat faollashgan tugunlarda amalga oshiradi",
                "is_correct": false
            },
            {
                "option_text": "Faqat musbat og‘irlikli graflarda ishlaydi",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Ford — Bellman algoritmining afzalligi nima?",
        "options": [
            {
                "option_text": "Musbat va manfiy og‘irlikdagi graflarda ishlashi",
                "is_correct": true
            },
            {
                "option_text": "Faqat musbat og‘irlikli graflarda ishlaydi",
                "is_correct": false
            },
            {
                "option_text": "Yalpi bog'lanmagan graflarda ishlaydi",
                "is_correct": false
            },
            {
                "option_text": "Hech qanday boshlang‘ich tugunsiz ishlaydi",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Dijkstra algoritmida har bir tugunga qanday amal bajariladi?",
        "options": [
            {
                "option_text": "Tugunning eng qisqa yo‘lini yangilash",
                "is_correct": true
            },
            {
                "option_text": "Tugunni qidirish va uning qo‘shnilarini tekshirish",
                "is_correct": false
            },
            {
                "option_text": "Faqat yangi tugunni qo‘shish",
                "is_correct": false
            },
            {
                "option_text": "Avvalgi tugunni yangilash va ularni ro‘yxatga olish",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Quyidagi qo‘shni ro‘yxatiga asoslangan grafda nechta qirra mavjud?                           {1, 3, 4}, {0, 2}, {1, 3}, {0,2, 4}, {0, 1, 3}",
        "options": [
            {
                "option_text": "6 qirra",
                "is_correct": false
            },
            {
                "option_text": "7 qirra",
                "is_correct": true
            },
            {
                "option_text": "8 qirra",
                "is_correct": false
            },
            {
                "option_text": "9 qirra",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Quyidagi qo‘shni ro‘yxatiga asoslangan grafda nechta qirra mavjud? {1,3,4}, {0,2}, {1,3}, {0,2,4}, {0,3}",
        "options": [
            {
                "option_text": "5 qirra",
                "is_correct": false
            },
            {
                "option_text": "6 qirra",
                "is_correct": true
            },
            {
                "option_text": "7 qirra",
                "is_correct": false
            },
            {
                "option_text": "8 qirra",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Quyidagi qo‘shni ro‘yxatiga asoslangan grafda nechta qirra mavjud? {1, 3}, {0,2,3,4}, {1,3,4}, {0,1,4}, {1,2,3}",
        "options": [
            {
                "option_text": "7 qirra",
                "is_correct": false
            },
            {
                "option_text": "6 qirra",
                "is_correct": false
            },
            {
                "option_text": "9 qirra",
                "is_correct": false
            },
            {
                "option_text": "8 qirra",
                "is_correct": true
            }
        ]
    },
    {
        "question_text": "Quyidagi qo‘shni ro‘yxatiga asoslangan grafda nechta qirra mavjud? {1}, {0,2,3}, {1}, {1}, {0}",
        "options": [
            {
                "option_text": "4 qirra",
                "is_correct": true
            },
            {
                "option_text": "5 qirra",
                "is_correct": false
            },
            {
                "option_text": "6 qirra",
                "is_correct": false
            },
            {
                "option_text": "7 qirra",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Quyidagi qo‘shni ro‘yxatiga asoslangan grafda nechta qirra mavjud? {1,4}, {0, 2}, {1}, {4}, {0, 3,5}",
        "options": [
            {
                "option_text": "4 qirra",
                "is_correct": false
            },
            {
                "option_text": "7 qirra",
                "is_correct": false
            },
            {
                "option_text": "5 qirra",
                "is_correct": true
            },
            {
                "option_text": "6 qirra",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Stekda ma'lumotlar qanday qo'shiladi?",
        "options": [
            {
                "option_text": "FIFO",
                "is_correct": false
            },
            {
                "option_text": "LIFO",
                "is_correct": true
            },
            {
                "option_text": "Random",
                "is_correct": false
            },
            {
                "option_text": "Qo'shib bo'lmaydi",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Navbatda ma'lumotlarga qanday taribda murojaat qilinadi?",
        "options": [
            {
                "option_text": "LIFO",
                "is_correct": false
            },
            {
                "option_text": "FIFO",
                "is_correct": true
            },
            {
                "option_text": "Hech qanday qoidaga bo‘ysunmaydi",
                "is_correct": false
            },
            {
                "option_text": "Kichik elementdan kattasiga qarab",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Stekning asosiy funksiyasi qaysi?",
        "options": [
            {
                "option_text": "Add, Remove",
                "is_correct": false
            },
            {
                "option_text": "Push, Pop",
                "is_correct": true
            },
            {
                "option_text": "Enqueue, Dequeue",
                "is_correct": false
            },
            {
                "option_text": "Insert, Delete",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Navbatda ma'lumotlarni qo'shish funksiyasi?",
        "options": [
            {
                "option_text": "Push",
                "is_correct": false
            },
            {
                "option_text": "Pop",
                "is_correct": false
            },
            {
                "option_text": "Enqueue",
                "is_correct": true
            },
            {
                "option_text": "Dequeue",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Navbatning oxiridan ma'lumot olish qanday ataladi?",
        "options": [
            {
                "option_text": "Peek",
                "is_correct": false
            },
            {
                "option_text": "Enqueue",
                "is_correct": false
            },
            {
                "option_text": "Dequeue",
                "is_correct": true
            },
            {
                "option_text": "Clear",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Navbatning boshlang‘ich elementi qanday olinadi?",
        "options": [
            {
                "option_text": "Oxiridan",
                "is_correct": false
            },
            {
                "option_text": "O‘rtasidan",
                "is_correct": false
            },
            {
                "option_text": "Boshidan",
                "is_correct": true
            },
            {
                "option_text": "Hech qachon olinmaydi",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Navbatda elementlar qanday ketma-ketlikda chiqadi?",
        "options": [
            {
                "option_text": "Teskari",
                "is_correct": false
            },
            {
                "option_text": "Kiritilgan ketma-ketlikda",
                "is_correct": true
            },
            {
                "option_text": "Tasodifiy",
                "is_correct": false
            },
            {
                "option_text": "Saralangan holda",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Stek qanday dasturiy ta'minotlarda ishlatiladi?",
        "options": [
            {
                "option_text": "Brauzer istoriyasi",
                "is_correct": true
            },
            {
                "option_text": "Printer navbatlari",
                "is_correct": false
            },
            {
                "option_text": "Grafik algoritmlar",
                "is_correct": false
            },
            {
                "option_text": "Massiv tahlili",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Navbat qayerda ko‘p ishlatiladi?",
        "options": [
            {
                "option_text": "Rekursiya",
                "is_correct": false
            },
            {
                "option_text": "Operativ tizim",
                "is_correct": false
            },
            {
                "option_text": "Brauzer istoriyasi",
                "is_correct": false
            },
            {
                "option_text": "Printer navbatlari",
                "is_correct": true
            }
        ]
    },
    {
        "question_text": "Rekursiv algoritmlar qaysi ma'lumotlar tuzilmasiga asoslangan?",
        "options": [
            {
                "option_text": "Navbat",
                "is_correct": false
            },
            {
                "option_text": "Stek",
                "is_correct": true
            },
            {
                "option_text": "Fayl tizimi",
                "is_correct": false
            },
            {
                "option_text": "To‘g‘ri emas",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Navbat va Stekning farqi qaysi jihatda ko‘rinadi?",
        "options": [
            {
                "option_text": "Xotira qoidalari",
                "is_correct": false
            },
            {
                "option_text": "Ma'lumotlar turlari",
                "is_correct": false
            },
            {
                "option_text": "Ishlash tamoyillari",
                "is_correct": true
            },
            {
                "option_text": "Elementlar soni",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Dekda ma'lumotlarni qo'shish qaysi uchi orqali amalga oshiriladi?",
        "options": [
            {
                "option_text": "Faqat oldidan",
                "is_correct": false
            },
            {
                "option_text": "Faqat orqadan",
                "is_correct": false
            },
            {
                "option_text": "Ikkala tomondan",
                "is_correct": true
            },
            {
                "option_text": "Hech qayerdan",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Dekning to‘liq nomi nima?",
        "options": [
            {
                "option_text": "Double Ended Queue",
                "is_correct": true
            },
            {
                "option_text": "Dynamic Enqueue",
                "is_correct": false
            },
            {
                "option_text": "Data Exchange Queue",
                "is_correct": false
            },
            {
                "option_text": "Direct Queue",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Dekda elementlarni olib tashlash funksiyalari qanday?",
        "options": [
            {
                "option_text": "PopFront, PopBack",
                "is_correct": true
            },
            {
                "option_text": "PushFront, PushBack",
                "is_correct": false
            },
            {
                "option_text": "DequeueFront, DequeueBack",
                "is_correct": false
            },
            {
                "option_text": "Insert, Remove",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Dek qanday dasturiy ilovalarda keng qo‘llaniladi?",
        "options": [
            {
                "option_text": "Matn tahlil qilishda",
                "is_correct": false
            },
            {
                "option_text": "Ma'lumotlar siqishda",
                "is_correct": false
            },
            {
                "option_text": "Rekursiyalarda",
                "is_correct": false
            },
            {
                "option_text": "Hammasi to‘g‘ri",
                "is_correct": true
            }
        ]
    },
    {
        "question_text": "Dekning asosiy xususiyati qaysi?",
        "options": [
            {
                "option_text": "Faqat LIFO usulida ishlaydi",
                "is_correct": false
            },
            {
                "option_text": "Faqat FIFO usulida ishlaydi",
                "is_correct": false
            },
            {
                "option_text": "Ikkala uchi orqali ishlaydi",
                "is_correct": true
            },
            {
                "option_text": "Faqat navbat sifatida ishlaydi",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Dekda elementlarni kiritish uchun qanday funksiya ishlatiladi?",
        "options": [
            {
                "option_text": "PushFront, PushBack",
                "is_correct": true
            },
            {
                "option_text": "EnqueueFront, EnqueueBack",
                "is_correct": false
            },
            {
                "option_text": "AddFront, AddBack",
                "is_correct": false
            },
            {
                "option_text": "InsertLeft, InsertRight",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Dekni oddiy navbatdan farqlaydigan jihati nima?",
        "options": [
            {
                "option_text": "Faqat FIFO ishlaydi",
                "is_correct": false
            },
            {
                "option_text": "Bir uchi yopiq",
                "is_correct": false
            },
            {
                "option_text": "Ikkala uchi ochiq",
                "is_correct": true
            },
            {
                "option_text": "Har bir funksiya parallel ishlaydi",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Massiv elementlariga qanday murojaat qilinadi?",
        "options": [
            {
                "option_text": "Indeks orqali",
                "is_correct": true
            },
            {
                "option_text": "Element nomi orqali",
                "is_correct": false
            },
            {
                "option_text": "Ma'lumot turi orqali",
                "is_correct": false
            },
            {
                "option_text": "Tasodifiy",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Massivning oxirgi elementiga qanday murojaat qilinadi?",
        "options": [
            {
                "option_text": "Massiv_nomi[0]",
                "is_correct": false
            },
            {
                "option_text": "Massiv_nomi[n-1]",
                "is_correct": true
            },
            {
                "option_text": "Massiv_nomi[n]",
                "is_correct": false
            },
            {
                "option_text": "Massiv_nomi[-1]",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Massivdan element qidirishning samarali usuli qaysi?",
        "options": [
            {
                "option_text": "Lineer qidirish",
                "is_correct": false
            },
            {
                "option_text": "Binariy qidirish",
                "is_correct": true
            },
            {
                "option_text": "Tasodifiy qidirish",
                "is_correct": false
            },
            {
                "option_text": "Barchasi",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "C++ dasturida massiv e'lon qilish uchun qaysi sintaksis ishlatiladi?",
        "options": [
            {
                "option_text": "int a[10];",
                "is_correct": true
            },
            {
                "option_text": "int a;",
                "is_correct": false
            },
            {
                "option_text": "array<int> a;",
                "is_correct": false
            },
            {
                "option_text": "new array();",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Massivdan element qidirishda qaysi holatda eng kop vaqt sarflanadi?",
        "options": [
            {
                "option_text": "Element birinchi joyda",
                "is_correct": false
            },
            {
                "option_text": "Element oxirgi joyda",
                "is_correct": false
            },
            {
                "option_text": "Element mavjud bo'masa",
                "is_correct": false
            },
            {
                "option_text": "Element o‘rtada",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Massiv ichida massiv bo‘lishi qaysi turdagi massiv?",
        "options": [
            {
                "option_text": "Dinamik massiv",
                "is_correct": false
            },
            {
                "option_text": "Ko‘p o‘lchovli massiv",
                "is_correct": true
            },
            {
                "option_text": "Statik massiv",
                "is_correct": false
            },
            {
                "option_text": "Ajratilgan massiv",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Yo‘nalgan graf qachon hosil bo‘ladi?",
        "options": [
            {
                "option_text": "Tugunlar bir xil bo‘lsa",
                "is_correct": false
            },
            {
                "option_text": "Tarmoqlarda yo‘nalish bo‘lsa",
                "is_correct": true
            },
            {
                "option_text": "Tarmoqlar bir xil bo‘lsa",
                "is_correct": false
            },
            {
                "option_text": "Tugunlar uzluksiz bo‘lsa",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Dijkstra algoritmi nima uchun ishlatiladi?",
        "options": [
            {
                "option_text": "Minimal masofani topish",
                "is_correct": true
            },
            {
                "option_text": "Chuqurlikni aniqlash",
                "is_correct": false
            },
            {
                "option_text": "Tugunlarni birlashtirish",
                "is_correct": false
            },
            {
                "option_text": "Daraxt hosil qilish",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Grafdagi sikl nima?",
        "options": [
            {
                "option_text": "Aylanmas yo‘l",
                "is_correct": false
            },
            {
                "option_text": "Tarmoqlarsiz yo‘l",
                "is_correct": false
            },
            {
                "option_text": "Boshlanish va tugash bir joyda bo‘lgan yo‘l",
                "is_correct": true
            },
            {
                "option_text": "Har doim mavjud yo‘l",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Graflar yordamida qanday masalalar yechiladi?",
        "options": [
            {
                "option_text": "Tarmoq tahlillari",
                "is_correct": false
            },
            {
                "option_text": "Yo‘lni optimallashtirish",
                "is_correct": false
            },
            {
                "option_text": "Resurslarni boshqarish",
                "is_correct": false
            },
            {
                "option_text": "Hammasi to‘g‘ri",
                "is_correct": true
            }
        ]
    },
    {
        "question_text": "C++ da vektor qaysi kutubxonada joylashgan?",
        "options": [
            {
                "option_text": "<iostream>",
                "is_correct": false
            },
            {
                "option_text": "<string>",
                "is_correct": false
            },
            {
                "option_text": "<vector>",
                "is_correct": true
            },
            {
                "option_text": "<array>",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Vektorga element qo‘shish qaysi metod yordamida amalga oshiriladi?",
        "options": [
            {
                "option_text": "push_back()",
                "is_correct": true
            },
            {
                "option_text": "add_element()",
                "is_correct": false
            },
            {
                "option_text": "insert()",
                "is_correct": false
            },
            {
                "option_text": "append()",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Vektorning o‘lchamini aniqlash uchun qaysi metod ishlatiladi?",
        "options": [
            {
                "option_text": "size()",
                "is_correct": true
            },
            {
                "option_text": "length()",
                "is_correct": false
            },
            {
                "option_text": "capacity()",
                "is_correct": false
            },
            {
                "option_text": "resize()",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Vektorning maksimal xotira hajmini aniqlash uchun qaysi metod ishlatiladi?",
        "options": [
            {
                "option_text": "size()",
                "is_correct": false
            },
            {
                "option_text": "max_size()",
                "is_correct": true
            },
            {
                "option_text": "capacity()",
                "is_correct": false
            },
            {
                "option_text": "resize()",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Vektorning oxirgi elementini olish uchun nima ishlatiladi?",
        "options": [
            {
                "option_text": "back()",
                "is_correct": true
            },
            {
                "option_text": "front()",
                "is_correct": false
            },
            {
                "option_text": "pop_back()",
                "is_correct": false
            },
            {
                "option_text": "end()",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Vektordan oxirgi elementni o‘chirish uchun qaysi metod ishlatiladi?",
        "options": [
            {
                "option_text": "erase()",
                "is_correct": false
            },
            {
                "option_text": "remove()",
                "is_correct": false
            },
            {
                "option_text": "pop_back()",
                "is_correct": true
            },
            {
                "option_text": "clear()",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Vektorda indeks orqali elementga qanday murojaat qilinadi?",
        "options": [
            {
                "option_text": "at(index)",
                "is_correct": true
            },
            {
                "option_text": "get(index)",
                "is_correct": false
            },
            {
                "option_text": "index()",
                "is_correct": false
            },
            {
                "option_text": "find(index)",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Vektorning xotira sig‘imini o‘zgartirish uchun qaysi metod ishlatiladi?",
        "options": [
            {
                "option_text": "resize()",
                "is_correct": false
            },
            {
                "option_text": "reserve()",
                "is_correct": true
            },
            {
                "option_text": "shrink_to_fit()",
                "is_correct": false
            },
            {
                "option_text": "clear()",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Vektor ichidagi barcha elementlarni o‘chirish uchun qaysi metod ishlatiladi?",
        "options": [
            {
                "option_text": "clear()",
                "is_correct": true
            },
            {
                "option_text": "erase_all()",
                "is_correct": false
            },
            {
                "option_text": "remove_all()",
                "is_correct": false
            },
            {
                "option_text": "reset()",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Vektorda iteratorlardan foydalanish qanday amalga oshiriladi?",
        "options": [
            {
                "option_text": "begin(), end()",
                "is_correct": true
            },
            {
                "option_text": "first(), last()",
                "is_correct": false
            },
            {
                "option_text": "iterator_start(), iterator_end()",
                "is_correct": false
            },
            {
                "option_text": "start(), finish()",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Vektorga boshqa vektorni birlashtirish uchun qanday usul ishlatiladi?",
        "options": [
            {
                "option_text": "append()",
                "is_correct": false
            },
            {
                "option_text": "insert()",
                "is_correct": false
            },
            {
                "option_text": "assign()",
                "is_correct": false
            },
            {
                "option_text": "Qo‘lda sikl orqali",
                "is_correct": true
            }
        ]
    },
    {
        "question_text": "std::vector da bo‘sh ekanligini tekshirish uchun nima ishlatiladi?",
        "options": [
            {
                "option_text": "empty()",
                "is_correct": true
            },
            {
                "option_text": "is_empty()",
                "is_correct": false
            },
            {
                "option_text": "clear()",
                "is_correct": false
            },
            {
                "option_text": "size() == 0",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Vektorni tartiblash uchun qanday funksiya ishlatiladi?",
        "options": [
            {
                "option_text": "sort()",
                "is_correct": false
            },
            {
                "option_text": "sort(begin, end)",
                "is_correct": true
            },
            {
                "option_text": "sort(begin)",
                "is_correct": false
            },
            {
                "option_text": "sort_all()",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Grafni tasvirlash usullaridan qaysi biri qo‘shma matritsa orqali amalga oshiriladi?",
        "options": [
            {
                "option_text": "Har bir tugun va uning qo‘shni tugunlari o'rtasidagi bog'lanishlarni matritsada ifodalash",
                "is_correct": true
            },
            {
                "option_text": "Faoliyatni faqat bir tugunda bajarish",
                "is_correct": false
            },
            {
                "option_text": "Faoliyatni tasodifiy amalga oshirish",
                "is_correct": false
            },
            {
                "option_text": "Faqat tugunlar o'rtasidagi masofalarni hisoblash",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Vektor ichidagi elementlarni teskari chiqarish qanday amalga oshiriladi?",
        "options": [
            {
                "option_text": "reverse()",
                "is_correct": false
            },
            {
                "option_text": "rbegin(), rend()",
                "is_correct": true
            },
            {
                "option_text": "swap()",
                "is_correct": false
            },
            {
                "option_text": "clear()",
                "is_correct": false
            }
        ]
    },
    {
        "question_text": "Xesh jadvali qanday ishlaydi?",
        "options": [
            {
                "option_text": "Har bir ma'lumotni faqat bitta joyda saqlaydi",
                "is_correct": false
            },
            {
                "option_text": "Ma'lumotlarni tasodifiy tarzda saqlaydi",
                "is_correct": false
            },
            {
                "option_text": "Har bir ma'lumot uchun kalit orqali joy ajratadi",
                "is_correct": true
            },
            {
                "option_text": "Faqat ma'lumotlarni tartib bilan saqlaydi",
                "is_correct": false
            }
        ]
    }
]